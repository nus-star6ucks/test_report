/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 34.0, "minX": 0.0, "maxY": 26224.0, "series": [{"data": [[0.0, 437.0], [0.1, 437.0], [0.2, 455.0], [0.3, 455.0], [0.4, 484.0], [0.5, 484.0], [0.6, 484.0], [0.7, 654.0], [0.8, 669.0], [0.9, 669.0], [1.0, 691.0], [1.1, 691.0], [1.2, 717.0], [1.3, 717.0], [1.4, 723.0], [1.5, 723.0], [1.6, 820.0], [1.7, 820.0], [1.8, 830.0], [1.9, 830.0], [2.0, 843.0], [2.1, 843.0], [2.2, 885.0], [2.3, 885.0], [2.4, 942.0], [2.5, 942.0], [2.6, 981.0], [2.7, 981.0], [2.8, 981.0], [2.9, 999.0], [3.0, 999.0], [3.1, 1064.0], [3.2, 1064.0], [3.3, 1069.0], [3.4, 1069.0], [3.5, 1081.0], [3.6, 1081.0], [3.7, 1087.0], [3.8, 1087.0], [3.9, 1091.0], [4.0, 1091.0], [4.1, 1150.0], [4.2, 1150.0], [4.3, 1185.0], [4.4, 1185.0], [4.5, 1208.0], [4.6, 1208.0], [4.7, 1229.0], [4.8, 1229.0], [4.9, 1277.0], [5.0, 1277.0], [5.1, 1358.0], [5.2, 1358.0], [5.3, 1360.0], [5.4, 1360.0], [5.5, 1364.0], [5.6, 1364.0], [5.7, 1440.0], [5.8, 1440.0], [5.9, 1571.0], [6.0, 1571.0], [6.1, 1581.0], [6.2, 1581.0], [6.3, 1594.0], [6.4, 1594.0], [6.5, 1611.0], [6.6, 1611.0], [6.7, 1682.0], [6.8, 1682.0], [6.9, 1688.0], [7.0, 1688.0], [7.1, 1726.0], [7.2, 1726.0], [7.3, 1733.0], [7.4, 1733.0], [7.5, 1802.0], [7.6, 1802.0], [7.7, 1805.0], [7.8, 1805.0], [7.9, 1828.0], [8.0, 1828.0], [8.1, 1837.0], [8.2, 1837.0], [8.3, 1856.0], [8.4, 1856.0], [8.5, 2007.0], [8.6, 2007.0], [8.7, 2098.0], [8.8, 2153.0], [8.9, 2153.0], [9.0, 2158.0], [9.1, 2158.0], [9.2, 2163.0], [9.3, 2163.0], [9.4, 2186.0], [9.5, 2186.0], [9.6, 2193.0], [9.7, 2193.0], [9.8, 2200.0], [9.9, 2200.0], [10.0, 2215.0], [10.1, 2215.0], [10.2, 2227.0], [10.3, 2227.0], [10.4, 2235.0], [10.5, 2235.0], [10.6, 2283.0], [10.7, 2283.0], [10.8, 2290.0], [10.9, 2290.0], [11.0, 2402.0], [11.1, 2402.0], [11.2, 2465.0], [11.3, 2465.0], [11.4, 2482.0], [11.5, 2482.0], [11.6, 2525.0], [11.7, 2525.0], [11.8, 2535.0], [11.9, 2535.0], [12.0, 2541.0], [12.1, 2541.0], [12.2, 2599.0], [12.3, 2599.0], [12.4, 2649.0], [12.5, 2649.0], [12.6, 2685.0], [12.7, 2685.0], [12.8, 2694.0], [12.9, 2694.0], [13.0, 2726.0], [13.1, 2726.0], [13.2, 2748.0], [13.3, 2748.0], [13.4, 2765.0], [13.5, 2765.0], [13.6, 2808.0], [13.7, 2808.0], [13.8, 2818.0], [13.9, 2818.0], [14.0, 2876.0], [14.1, 2876.0], [14.2, 2878.0], [14.3, 2878.0], [14.4, 2959.0], [14.5, 2959.0], [14.6, 2973.0], [14.7, 2973.0], [14.8, 2974.0], [14.9, 2974.0], [15.0, 3045.0], [15.1, 3045.0], [15.2, 3052.0], [15.3, 3052.0], [15.4, 3067.0], [15.5, 3067.0], [15.6, 3084.0], [15.7, 3084.0], [15.8, 3137.0], [15.9, 3137.0], [16.0, 3242.0], [16.1, 3242.0], [16.2, 3436.0], [16.3, 3436.0], [16.4, 3515.0], [16.5, 3515.0], [16.6, 3538.0], [16.7, 3538.0], [16.8, 3651.0], [16.9, 3651.0], [17.0, 3692.0], [17.1, 3692.0], [17.2, 3758.0], [17.3, 3758.0], [17.4, 3792.0], [17.5, 3792.0], [17.6, 3809.0], [17.7, 3809.0], [17.8, 3836.0], [17.9, 3836.0], [18.0, 4003.0], [18.1, 4003.0], [18.2, 4115.0], [18.3, 4115.0], [18.4, 4117.0], [18.5, 4117.0], [18.6, 4192.0], [18.7, 4192.0], [18.8, 4195.0], [18.9, 4195.0], [19.0, 4381.0], [19.1, 4381.0], [19.2, 4384.0], [19.3, 4384.0], [19.4, 4439.0], [19.5, 4439.0], [19.6, 4461.0], [19.7, 4461.0], [19.8, 4530.0], [19.9, 4530.0], [20.0, 4540.0], [20.1, 4540.0], [20.2, 4811.0], [20.3, 4811.0], [20.4, 4877.0], [20.5, 4877.0], [20.6, 4906.0], [20.7, 4906.0], [20.8, 4909.0], [20.9, 4909.0], [21.0, 4934.0], [21.1, 4934.0], [21.2, 4935.0], [21.3, 4935.0], [21.4, 4947.0], [21.5, 4947.0], [21.6, 5009.0], [21.7, 5009.0], [21.8, 5047.0], [21.9, 5047.0], [22.0, 5139.0], [22.1, 5139.0], [22.2, 5223.0], [22.3, 5223.0], [22.4, 5257.0], [22.5, 5257.0], [22.6, 5331.0], [22.7, 5331.0], [22.8, 5372.0], [22.9, 5372.0], [23.0, 5379.0], [23.1, 5379.0], [23.2, 5450.0], [23.3, 5450.0], [23.4, 5502.0], [23.5, 5502.0], [23.6, 5515.0], [23.7, 5515.0], [23.8, 5537.0], [23.9, 5537.0], [24.0, 5637.0], [24.1, 5637.0], [24.2, 5710.0], [24.3, 5710.0], [24.4, 5897.0], [24.5, 5897.0], [24.6, 5976.0], [24.7, 5976.0], [24.8, 6075.0], [24.9, 6075.0], [25.0, 6087.0], [25.1, 6087.0], [25.2, 6102.0], [25.3, 6102.0], [25.4, 6106.0], [25.5, 6106.0], [25.6, 6128.0], [25.7, 6128.0], [25.8, 6434.0], [25.9, 6434.0], [26.0, 6531.0], [26.1, 6531.0], [26.2, 6534.0], [26.3, 6534.0], [26.4, 6590.0], [26.5, 6590.0], [26.6, 6609.0], [26.7, 6609.0], [26.8, 6617.0], [26.9, 6617.0], [27.0, 6705.0], [27.1, 6705.0], [27.2, 6718.0], [27.3, 6718.0], [27.4, 6856.0], [27.5, 6856.0], [27.6, 6983.0], [27.7, 6983.0], [27.8, 7019.0], [27.9, 7019.0], [28.0, 7088.0], [28.1, 7088.0], [28.2, 7144.0], [28.3, 7144.0], [28.4, 7206.0], [28.5, 7206.0], [28.6, 7222.0], [28.7, 7222.0], [28.8, 7514.0], [28.9, 7514.0], [29.0, 7620.0], [29.1, 7620.0], [29.2, 7654.0], [29.3, 7654.0], [29.4, 7671.0], [29.5, 7671.0], [29.6, 7676.0], [29.7, 7676.0], [29.8, 7684.0], [29.9, 7684.0], [30.0, 7760.0], [30.1, 7760.0], [30.2, 8048.0], [30.3, 8048.0], [30.4, 8050.0], [30.5, 8050.0], [30.6, 8086.0], [30.7, 8086.0], [30.8, 8099.0], [30.9, 8099.0], [31.0, 8143.0], [31.1, 8143.0], [31.2, 8182.0], [31.3, 8182.0], [31.4, 8224.0], [31.5, 8224.0], [31.6, 8234.0], [31.7, 8234.0], [31.8, 8248.0], [31.9, 8248.0], [32.0, 8254.0], [32.1, 8254.0], [32.2, 8278.0], [32.3, 8278.0], [32.4, 8417.0], [32.5, 8417.0], [32.6, 8457.0], [32.7, 8457.0], [32.8, 8618.0], [32.9, 8618.0], [33.0, 8649.0], [33.1, 8649.0], [33.2, 8653.0], [33.3, 8653.0], [33.4, 8662.0], [33.5, 8662.0], [33.6, 8663.0], [33.7, 8663.0], [33.8, 8672.0], [33.9, 8672.0], [34.0, 8678.0], [34.1, 8678.0], [34.2, 8679.0], [34.3, 8679.0], [34.4, 8707.0], [34.5, 8707.0], [34.6, 8709.0], [34.7, 8709.0], [34.8, 8709.0], [34.9, 8709.0], [35.0, 8730.0], [35.1, 8730.0], [35.2, 8731.0], [35.3, 8731.0], [35.4, 8733.0], [35.5, 8733.0], [35.6, 8734.0], [35.7, 8734.0], [35.8, 8743.0], [35.9, 8743.0], [36.0, 8752.0], [36.1, 8752.0], [36.2, 8762.0], [36.3, 8762.0], [36.4, 8765.0], [36.5, 8765.0], [36.6, 8766.0], [36.7, 8766.0], [36.8, 8768.0], [36.9, 8768.0], [37.0, 8779.0], [37.1, 8779.0], [37.2, 8792.0], [37.3, 8792.0], [37.4, 8803.0], [37.5, 8803.0], [37.6, 8816.0], [37.7, 8816.0], [37.8, 8822.0], [37.9, 8822.0], [38.0, 8822.0], [38.1, 8822.0], [38.2, 8847.0], [38.3, 8847.0], [38.4, 8866.0], [38.5, 8866.0], [38.6, 8868.0], [38.7, 8868.0], [38.8, 8898.0], [38.9, 8898.0], [39.0, 8905.0], [39.1, 8905.0], [39.2, 8923.0], [39.3, 8923.0], [39.4, 8923.0], [39.5, 8978.0], [39.6, 8978.0], [39.7, 8989.0], [39.8, 8989.0], [39.9, 8991.0], [40.0, 8991.0], [40.1, 9001.0], [40.2, 9001.0], [40.3, 9017.0], [40.4, 9017.0], [40.5, 9051.0], [40.6, 9051.0], [40.7, 9059.0], [40.8, 9059.0], [40.9, 9061.0], [41.0, 9061.0], [41.1, 9066.0], [41.2, 9066.0], [41.3, 9089.0], [41.4, 9089.0], [41.5, 9096.0], [41.6, 9096.0], [41.7, 9102.0], [41.8, 9102.0], [41.9, 9138.0], [42.0, 9138.0], [42.1, 9138.0], [42.2, 9138.0], [42.3, 9144.0], [42.4, 9144.0], [42.5, 9148.0], [42.6, 9148.0], [42.7, 9189.0], [42.8, 9189.0], [42.9, 9193.0], [43.0, 9193.0], [43.1, 9197.0], [43.2, 9197.0], [43.3, 9204.0], [43.4, 9204.0], [43.5, 9319.0], [43.6, 9319.0], [43.7, 9333.0], [43.8, 9333.0], [43.9, 9416.0], [44.0, 9416.0], [44.1, 9447.0], [44.2, 9447.0], [44.3, 9588.0], [44.4, 9588.0], [44.5, 9629.0], [44.6, 9629.0], [44.7, 9656.0], [44.8, 9656.0], [44.9, 9665.0], [45.0, 9665.0], [45.1, 9676.0], [45.2, 9676.0], [45.3, 9701.0], [45.4, 9701.0], [45.5, 9711.0], [45.6, 9711.0], [45.7, 9725.0], [45.8, 9725.0], [45.9, 9729.0], [46.0, 9729.0], [46.1, 9734.0], [46.2, 9734.0], [46.3, 9736.0], [46.4, 9736.0], [46.5, 9802.0], [46.6, 9802.0], [46.7, 9812.0], [46.8, 9812.0], [46.9, 9815.0], [47.0, 9815.0], [47.1, 9843.0], [47.2, 9843.0], [47.3, 9845.0], [47.4, 9845.0], [47.5, 9876.0], [47.6, 9876.0], [47.7, 9879.0], [47.8, 9879.0], [47.9, 9927.0], [48.0, 9927.0], [48.1, 9931.0], [48.2, 9931.0], [48.3, 9941.0], [48.4, 9941.0], [48.5, 9944.0], [48.6, 9944.0], [48.7, 9950.0], [48.8, 9950.0], [48.9, 9971.0], [49.0, 9971.0], [49.1, 10010.0], [49.2, 10010.0], [49.3, 10029.0], [49.4, 10029.0], [49.5, 10098.0], [49.6, 10098.0], [49.7, 10109.0], [49.8, 10109.0], [49.9, 10109.0], [50.0, 10109.0], [50.1, 10180.0], [50.2, 10180.0], [50.3, 10236.0], [50.4, 10236.0], [50.5, 10248.0], [50.6, 10248.0], [50.7, 10280.0], [50.8, 10280.0], [50.9, 10296.0], [51.0, 10296.0], [51.1, 10351.0], [51.2, 10351.0], [51.3, 10371.0], [51.4, 10371.0], [51.5, 10448.0], [51.6, 10448.0], [51.7, 10451.0], [51.8, 10451.0], [51.9, 10455.0], [52.0, 10455.0], [52.1, 10533.0], [52.2, 10533.0], [52.3, 10572.0], [52.4, 10572.0], [52.5, 10617.0], [52.6, 10617.0], [52.7, 10630.0], [52.8, 10630.0], [52.9, 10683.0], [53.0, 10683.0], [53.1, 10703.0], [53.2, 10703.0], [53.3, 10784.0], [53.4, 10784.0], [53.5, 10790.0], [53.6, 10790.0], [53.7, 10793.0], [53.8, 10793.0], [53.9, 10862.0], [54.0, 10862.0], [54.1, 10868.0], [54.2, 10868.0], [54.3, 10883.0], [54.4, 10883.0], [54.5, 10927.0], [54.6, 10927.0], [54.7, 10942.0], [54.8, 10942.0], [54.9, 10957.0], [55.0, 10957.0], [55.1, 10962.0], [55.2, 10962.0], [55.3, 10976.0], [55.4, 10976.0], [55.5, 11004.0], [55.6, 11004.0], [55.7, 11041.0], [55.8, 11041.0], [55.9, 11049.0], [56.0, 11049.0], [56.1, 11084.0], [56.2, 11084.0], [56.3, 11106.0], [56.4, 11106.0], [56.5, 11123.0], [56.6, 11123.0], [56.7, 11126.0], [56.8, 11126.0], [56.9, 11136.0], [57.0, 11136.0], [57.1, 11141.0], [57.2, 11141.0], [57.3, 11213.0], [57.4, 11213.0], [57.5, 11232.0], [57.6, 11232.0], [57.7, 11237.0], [57.8, 11237.0], [57.9, 11255.0], [58.0, 11255.0], [58.1, 11270.0], [58.2, 11270.0], [58.3, 11410.0], [58.4, 11410.0], [58.5, 11451.0], [58.6, 11451.0], [58.7, 11456.0], [58.8, 11456.0], [58.9, 11476.0], [59.0, 11476.0], [59.1, 11528.0], [59.2, 11528.0], [59.3, 11604.0], [59.4, 11604.0], [59.5, 11622.0], [59.6, 11622.0], [59.7, 11652.0], [59.8, 11652.0], [59.9, 11665.0], [60.0, 11665.0], [60.1, 11713.0], [60.2, 11713.0], [60.3, 11721.0], [60.4, 11721.0], [60.5, 11744.0], [60.6, 11744.0], [60.7, 11785.0], [60.8, 11785.0], [60.9, 11789.0], [61.0, 11789.0], [61.1, 11812.0], [61.2, 11812.0], [61.3, 11849.0], [61.4, 11849.0], [61.5, 11854.0], [61.6, 11854.0], [61.7, 11872.0], [61.8, 11872.0], [61.9, 11898.0], [62.0, 11898.0], [62.1, 11929.0], [62.2, 11929.0], [62.3, 11939.0], [62.4, 11939.0], [62.5, 11940.0], [62.6, 11940.0], [62.7, 11972.0], [62.8, 11972.0], [62.9, 11974.0], [63.0, 11974.0], [63.1, 11975.0], [63.2, 11975.0], [63.3, 12101.0], [63.4, 12101.0], [63.5, 12118.0], [63.6, 12118.0], [63.7, 12171.0], [63.8, 12171.0], [63.9, 12335.0], [64.0, 12335.0], [64.1, 12612.0], [64.2, 12612.0], [64.3, 12621.0], [64.4, 12621.0], [64.5, 12627.0], [64.6, 12627.0], [64.7, 12644.0], [64.8, 12644.0], [64.9, 12645.0], [65.0, 12645.0], [65.1, 12715.0], [65.2, 12715.0], [65.3, 12726.0], [65.4, 12726.0], [65.5, 12818.0], [65.6, 12818.0], [65.7, 12829.0], [65.8, 12829.0], [65.9, 12864.0], [66.0, 12864.0], [66.1, 12872.0], [66.2, 12872.0], [66.3, 12904.0], [66.4, 12904.0], [66.5, 12906.0], [66.6, 12906.0], [66.7, 12965.0], [66.8, 12965.0], [66.9, 13019.0], [67.0, 13019.0], [67.1, 13035.0], [67.2, 13035.0], [67.3, 13125.0], [67.4, 13125.0], [67.5, 13125.0], [67.6, 13125.0], [67.7, 13135.0], [67.8, 13135.0], [67.9, 13143.0], [68.0, 13143.0], [68.1, 13186.0], [68.2, 13186.0], [68.3, 13203.0], [68.4, 13203.0], [68.5, 13224.0], [68.6, 13224.0], [68.7, 13283.0], [68.8, 13283.0], [68.9, 13287.0], [69.0, 13287.0], [69.1, 13311.0], [69.2, 13311.0], [69.3, 13331.0], [69.4, 13331.0], [69.5, 13354.0], [69.6, 13354.0], [69.7, 13368.0], [69.8, 13368.0], [69.9, 13387.0], [70.0, 13387.0], [70.1, 13388.0], [70.2, 13388.0], [70.3, 13394.0], [70.4, 13394.0], [70.5, 13402.0], [70.6, 13402.0], [70.7, 13406.0], [70.8, 13406.0], [70.9, 13459.0], [71.0, 13459.0], [71.1, 13464.0], [71.2, 13464.0], [71.3, 13468.0], [71.4, 13468.0], [71.5, 13472.0], [71.6, 13472.0], [71.7, 13519.0], [71.8, 13519.0], [71.9, 13519.0], [72.0, 13519.0], [72.1, 13577.0], [72.2, 13577.0], [72.3, 13582.0], [72.4, 13582.0], [72.5, 13584.0], [72.6, 13584.0], [72.7, 13628.0], [72.8, 13628.0], [72.9, 13632.0], [73.0, 13632.0], [73.1, 13660.0], [73.2, 13660.0], [73.3, 13662.0], [73.4, 13662.0], [73.5, 13756.0], [73.6, 13756.0], [73.7, 13981.0], [73.8, 13981.0], [73.9, 14049.0], [74.0, 14049.0], [74.1, 14067.0], [74.2, 14067.0], [74.3, 14109.0], [74.4, 14109.0], [74.5, 14113.0], [74.6, 14113.0], [74.7, 14122.0], [74.8, 14122.0], [74.9, 14196.0], [75.0, 14196.0], [75.1, 14319.0], [75.2, 14319.0], [75.3, 14325.0], [75.4, 14325.0], [75.5, 14358.0], [75.6, 14358.0], [75.7, 14419.0], [75.8, 14419.0], [75.9, 14476.0], [76.0, 14476.0], [76.1, 14544.0], [76.2, 14544.0], [76.3, 14650.0], [76.4, 14650.0], [76.5, 14704.0], [76.6, 14704.0], [76.7, 14846.0], [76.8, 14846.0], [76.9, 14972.0], [77.0, 14972.0], [77.1, 15021.0], [77.2, 15021.0], [77.3, 15029.0], [77.4, 15029.0], [77.5, 15145.0], [77.6, 15145.0], [77.7, 15160.0], [77.8, 15160.0], [77.9, 15168.0], [78.0, 15168.0], [78.1, 15169.0], [78.2, 15169.0], [78.3, 15173.0], [78.4, 15173.0], [78.5, 15211.0], [78.6, 15211.0], [78.7, 15302.0], [78.8, 15302.0], [78.9, 15372.0], [79.0, 15372.0], [79.1, 15403.0], [79.2, 15403.0], [79.3, 15406.0], [79.4, 15406.0], [79.5, 15549.0], [79.6, 15549.0], [79.7, 15594.0], [79.8, 15594.0], [79.9, 15670.0], [80.0, 15670.0], [80.1, 15703.0], [80.2, 15703.0], [80.3, 15719.0], [80.4, 15719.0], [80.5, 15724.0], [80.6, 15724.0], [80.7, 15730.0], [80.8, 15730.0], [80.9, 15743.0], [81.0, 15743.0], [81.1, 15745.0], [81.2, 15745.0], [81.3, 15753.0], [81.4, 15753.0], [81.5, 15796.0], [81.6, 15796.0], [81.7, 15839.0], [81.8, 15839.0], [81.9, 15851.0], [82.0, 15851.0], [82.1, 15912.0], [82.2, 15912.0], [82.3, 15934.0], [82.4, 15934.0], [82.5, 15960.0], [82.6, 15960.0], [82.7, 16010.0], [82.8, 16010.0], [82.9, 16014.0], [83.0, 16014.0], [83.1, 16041.0], [83.2, 16041.0], [83.3, 16091.0], [83.4, 16091.0], [83.5, 16094.0], [83.6, 16094.0], [83.7, 16157.0], [83.8, 16157.0], [83.9, 16170.0], [84.0, 16170.0], [84.1, 16221.0], [84.2, 16221.0], [84.3, 16249.0], [84.4, 16249.0], [84.5, 16278.0], [84.6, 16278.0], [84.7, 16330.0], [84.8, 16330.0], [84.9, 16353.0], [85.0, 16353.0], [85.1, 16423.0], [85.2, 16423.0], [85.3, 16461.0], [85.4, 16461.0], [85.5, 16468.0], [85.6, 16468.0], [85.7, 16505.0], [85.8, 16505.0], [85.9, 16558.0], [86.0, 16558.0], [86.1, 16564.0], [86.2, 16564.0], [86.3, 16616.0], [86.4, 16616.0], [86.5, 16716.0], [86.6, 16716.0], [86.7, 16726.0], [86.8, 16726.0], [86.9, 16770.0], [87.0, 16770.0], [87.1, 16777.0], [87.2, 16777.0], [87.3, 16815.0], [87.4, 16815.0], [87.5, 16865.0], [87.6, 16865.0], [87.7, 16889.0], [87.8, 16889.0], [87.9, 16926.0], [88.0, 16926.0], [88.1, 16964.0], [88.2, 16964.0], [88.3, 16971.0], [88.4, 16971.0], [88.5, 17054.0], [88.6, 17054.0], [88.7, 17094.0], [88.8, 17094.0], [88.9, 17127.0], [89.0, 17127.0], [89.1, 17175.0], [89.2, 17175.0], [89.3, 17202.0], [89.4, 17202.0], [89.5, 17217.0], [89.6, 17217.0], [89.7, 17235.0], [89.8, 17235.0], [89.9, 17373.0], [90.0, 17373.0], [90.1, 17417.0], [90.2, 17417.0], [90.3, 17469.0], [90.4, 17469.0], [90.5, 17472.0], [90.6, 17472.0], [90.7, 17473.0], [90.8, 17473.0], [90.9, 17503.0], [91.0, 17503.0], [91.1, 17511.0], [91.2, 17511.0], [91.3, 17514.0], [91.4, 17514.0], [91.5, 17623.0], [91.6, 17623.0], [91.7, 17711.0], [91.8, 17711.0], [91.9, 17744.0], [92.0, 17744.0], [92.1, 17769.0], [92.2, 17769.0], [92.3, 17839.0], [92.4, 17839.0], [92.5, 17861.0], [92.6, 17861.0], [92.7, 17915.0], [92.8, 17915.0], [92.9, 17920.0], [93.0, 17920.0], [93.1, 17923.0], [93.2, 17923.0], [93.3, 17949.0], [93.4, 17949.0], [93.5, 17983.0], [93.6, 17983.0], [93.7, 17991.0], [93.8, 17991.0], [93.9, 18316.0], [94.0, 18316.0], [94.1, 18363.0], [94.2, 18363.0], [94.3, 18529.0], [94.4, 18529.0], [94.5, 18577.0], [94.6, 18577.0], [94.7, 18598.0], [94.8, 18598.0], [94.9, 18745.0], [95.0, 18745.0], [95.1, 18789.0], [95.2, 18789.0], [95.3, 18794.0], [95.4, 18794.0], [95.5, 18857.0], [95.6, 18857.0], [95.7, 19020.0], [95.8, 19020.0], [95.9, 19096.0], [96.0, 19096.0], [96.1, 19367.0], [96.2, 19367.0], [96.3, 19726.0], [96.4, 19726.0], [96.5, 20055.0], [96.6, 20055.0], [96.7, 20181.0], [96.8, 20181.0], [96.9, 21016.0], [97.0, 21016.0], [97.1, 21298.0], [97.2, 21298.0], [97.3, 21718.0], [97.4, 21718.0], [97.5, 21970.0], [97.6, 21970.0], [97.7, 21970.0], [97.8, 21970.0], [97.9, 22267.0], [98.0, 22267.0], [98.1, 22338.0], [98.2, 22338.0], [98.3, 22632.0], [98.4, 22632.0], [98.5, 22655.0], [98.6, 22655.0], [98.7, 22662.0], [98.8, 22662.0], [98.9, 22942.0], [99.0, 22942.0], [99.1, 23111.0], [99.2, 23111.0], [99.3, 23378.0], [99.4, 23378.0], [99.5, 23845.0], [99.6, 23845.0], [99.7, 25298.0], [99.8, 25298.0], [99.9, 26224.0], [100.0, 26224.0]], "isOverall": false, "label": "Store List", "isController": false}, {"data": [[0.0, 530.0], [0.1, 530.0], [0.2, 2179.0], [0.3, 2179.0], [0.4, 2210.0], [0.5, 2210.0], [0.6, 2210.0], [0.7, 2287.0], [0.8, 2619.0], [0.9, 2619.0], [1.0, 2688.0], [1.1, 2688.0], [1.2, 2768.0], [1.3, 2768.0], [1.4, 2790.0], [1.5, 2790.0], [1.6, 3023.0], [1.7, 3023.0], [1.8, 3069.0], [1.9, 3069.0], [2.0, 3163.0], [2.1, 3163.0], [2.2, 3275.0], [2.3, 3275.0], [2.4, 3374.0], [2.5, 3374.0], [2.6, 3377.0], [2.7, 3377.0], [2.8, 3377.0], [2.9, 3538.0], [3.0, 3538.0], [3.1, 3731.0], [3.2, 3731.0], [3.3, 3740.0], [3.4, 3740.0], [3.5, 3758.0], [3.6, 3758.0], [3.7, 3893.0], [3.8, 3893.0], [3.9, 3977.0], [4.0, 3977.0], [4.1, 4152.0], [4.2, 4152.0], [4.3, 4179.0], [4.4, 4179.0], [4.5, 4274.0], [4.6, 4274.0], [4.7, 4335.0], [4.8, 4335.0], [4.9, 4354.0], [5.0, 4354.0], [5.1, 4395.0], [5.2, 4395.0], [5.3, 4566.0], [5.4, 4566.0], [5.5, 4924.0], [5.6, 4924.0], [5.7, 4944.0], [5.8, 4944.0], [5.9, 4976.0], [6.0, 4976.0], [6.1, 5139.0], [6.2, 5139.0], [6.3, 5160.0], [6.4, 5160.0], [6.5, 5241.0], [6.6, 5241.0], [6.7, 5261.0], [6.8, 5261.0], [6.9, 5300.0], [7.0, 5300.0], [7.1, 5322.0], [7.2, 5322.0], [7.3, 5401.0], [7.4, 5401.0], [7.5, 5427.0], [7.6, 5427.0], [7.7, 5484.0], [7.8, 5484.0], [7.9, 5524.0], [8.0, 5524.0], [8.1, 5616.0], [8.2, 5616.0], [8.3, 5670.0], [8.4, 5670.0], [8.5, 5683.0], [8.6, 5683.0], [8.7, 5904.0], [8.8, 5910.0], [8.9, 5910.0], [9.0, 5921.0], [9.1, 5921.0], [9.2, 6023.0], [9.3, 6023.0], [9.4, 6089.0], [9.5, 6089.0], [9.6, 6257.0], [9.7, 6257.0], [9.8, 6291.0], [9.9, 6291.0], [10.0, 6433.0], [10.1, 6433.0], [10.2, 6544.0], [10.3, 6544.0], [10.4, 6586.0], [10.5, 6586.0], [10.6, 6738.0], [10.7, 6738.0], [10.8, 6781.0], [10.9, 6781.0], [11.0, 6800.0], [11.1, 6800.0], [11.2, 6896.0], [11.3, 6896.0], [11.4, 6954.0], [11.5, 6954.0], [11.6, 6968.0], [11.7, 6968.0], [11.8, 7070.0], [11.9, 7070.0], [12.0, 7242.0], [12.1, 7242.0], [12.2, 7282.0], [12.3, 7282.0], [12.4, 7397.0], [12.5, 7397.0], [12.6, 7479.0], [12.7, 7479.0], [12.8, 7511.0], [12.9, 7511.0], [13.0, 7535.0], [13.1, 7535.0], [13.2, 7603.0], [13.3, 7603.0], [13.4, 7720.0], [13.5, 7720.0], [13.6, 7790.0], [13.7, 7790.0], [13.8, 7819.0], [13.9, 7819.0], [14.0, 7868.0], [14.1, 7868.0], [14.2, 7907.0], [14.3, 7907.0], [14.4, 7909.0], [14.5, 7909.0], [14.6, 7937.0], [14.7, 7937.0], [14.8, 7995.0], [14.9, 7995.0], [15.0, 8021.0], [15.1, 8021.0], [15.2, 8044.0], [15.3, 8044.0], [15.4, 8079.0], [15.5, 8079.0], [15.6, 8081.0], [15.7, 8081.0], [15.8, 8088.0], [15.9, 8088.0], [16.0, 8108.0], [16.1, 8108.0], [16.2, 8211.0], [16.3, 8211.0], [16.4, 8275.0], [16.5, 8275.0], [16.6, 8283.0], [16.7, 8283.0], [16.8, 8284.0], [16.9, 8284.0], [17.0, 8315.0], [17.1, 8315.0], [17.2, 8390.0], [17.3, 8390.0], [17.4, 8496.0], [17.5, 8496.0], [17.6, 8515.0], [17.7, 8515.0], [17.8, 8530.0], [17.9, 8530.0], [18.0, 8541.0], [18.1, 8541.0], [18.2, 8545.0], [18.3, 8545.0], [18.4, 8548.0], [18.5, 8548.0], [18.6, 8556.0], [18.7, 8556.0], [18.8, 8630.0], [18.9, 8630.0], [19.0, 8668.0], [19.1, 8668.0], [19.2, 8670.0], [19.3, 8670.0], [19.4, 8676.0], [19.5, 8676.0], [19.6, 8700.0], [19.7, 8700.0], [19.8, 8733.0], [19.9, 8733.0], [20.0, 8778.0], [20.1, 8778.0], [20.2, 8793.0], [20.3, 8793.0], [20.4, 8801.0], [20.5, 8801.0], [20.6, 8826.0], [20.7, 8826.0], [20.8, 8847.0], [20.9, 8847.0], [21.0, 8894.0], [21.1, 8894.0], [21.2, 8901.0], [21.3, 8901.0], [21.4, 8923.0], [21.5, 8923.0], [21.6, 8935.0], [21.7, 8935.0], [21.8, 8937.0], [21.9, 8937.0], [22.0, 8959.0], [22.1, 8959.0], [22.2, 8972.0], [22.3, 8972.0], [22.4, 8974.0], [22.5, 8974.0], [22.6, 9067.0], [22.7, 9067.0], [22.8, 9081.0], [22.9, 9081.0], [23.0, 9099.0], [23.1, 9099.0], [23.2, 9104.0], [23.3, 9104.0], [23.4, 9134.0], [23.5, 9134.0], [23.6, 9150.0], [23.7, 9150.0], [23.8, 9169.0], [23.9, 9169.0], [24.0, 9181.0], [24.1, 9181.0], [24.2, 9311.0], [24.3, 9311.0], [24.4, 9332.0], [24.5, 9332.0], [24.6, 9358.0], [24.7, 9358.0], [24.8, 9373.0], [24.9, 9373.0], [25.0, 9395.0], [25.1, 9395.0], [25.2, 9447.0], [25.3, 9447.0], [25.4, 9466.0], [25.5, 9466.0], [25.6, 9478.0], [25.7, 9478.0], [25.8, 9484.0], [25.9, 9484.0], [26.0, 9514.0], [26.1, 9514.0], [26.2, 9522.0], [26.3, 9522.0], [26.4, 9524.0], [26.5, 9524.0], [26.6, 9542.0], [26.7, 9542.0], [26.8, 9568.0], [26.9, 9568.0], [27.0, 9569.0], [27.1, 9569.0], [27.2, 9569.0], [27.3, 9569.0], [27.4, 9605.0], [27.5, 9605.0], [27.6, 9615.0], [27.7, 9615.0], [27.8, 9615.0], [27.9, 9615.0], [28.0, 9617.0], [28.1, 9617.0], [28.2, 9635.0], [28.3, 9635.0], [28.4, 9658.0], [28.5, 9658.0], [28.6, 9688.0], [28.7, 9688.0], [28.8, 9711.0], [28.9, 9711.0], [29.0, 9714.0], [29.1, 9714.0], [29.2, 9728.0], [29.3, 9728.0], [29.4, 9748.0], [29.5, 9748.0], [29.6, 9765.0], [29.7, 9765.0], [29.8, 9771.0], [29.9, 9771.0], [30.0, 9789.0], [30.1, 9789.0], [30.2, 9814.0], [30.3, 9814.0], [30.4, 9847.0], [30.5, 9847.0], [30.6, 9894.0], [30.7, 9894.0], [30.8, 9932.0], [30.9, 9932.0], [31.0, 9942.0], [31.1, 9942.0], [31.2, 9973.0], [31.3, 9973.0], [31.4, 9981.0], [31.5, 9981.0], [31.6, 10009.0], [31.7, 10009.0], [31.8, 10066.0], [31.9, 10066.0], [32.0, 10069.0], [32.1, 10069.0], [32.2, 10091.0], [32.3, 10091.0], [32.4, 10193.0], [32.5, 10193.0], [32.6, 10200.0], [32.7, 10200.0], [32.8, 10205.0], [32.9, 10205.0], [33.0, 10210.0], [33.1, 10210.0], [33.2, 10330.0], [33.3, 10330.0], [33.4, 10368.0], [33.5, 10368.0], [33.6, 10378.0], [33.7, 10378.0], [33.8, 10394.0], [33.9, 10394.0], [34.0, 10400.0], [34.1, 10400.0], [34.2, 10408.0], [34.3, 10408.0], [34.4, 10409.0], [34.5, 10409.0], [34.6, 10448.0], [34.7, 10448.0], [34.8, 10485.0], [34.9, 10485.0], [35.0, 10519.0], [35.1, 10519.0], [35.2, 10623.0], [35.3, 10623.0], [35.4, 10658.0], [35.5, 10658.0], [35.6, 10668.0], [35.7, 10668.0], [35.8, 10671.0], [35.9, 10671.0], [36.0, 10732.0], [36.1, 10732.0], [36.2, 10800.0], [36.3, 10800.0], [36.4, 10826.0], [36.5, 10826.0], [36.6, 10910.0], [36.7, 10910.0], [36.8, 10945.0], [36.9, 10945.0], [37.0, 10948.0], [37.1, 10948.0], [37.2, 10970.0], [37.3, 10970.0], [37.4, 10984.0], [37.5, 10984.0], [37.6, 11027.0], [37.7, 11027.0], [37.8, 11030.0], [37.9, 11030.0], [38.0, 11034.0], [38.1, 11034.0], [38.2, 11041.0], [38.3, 11041.0], [38.4, 11041.0], [38.5, 11045.0], [38.6, 11045.0], [38.7, 11073.0], [38.8, 11073.0], [38.9, 11074.0], [39.0, 11074.0], [39.1, 11077.0], [39.2, 11077.0], [39.3, 11096.0], [39.4, 11096.0], [39.5, 11103.0], [39.6, 11103.0], [39.7, 11113.0], [39.8, 11113.0], [39.9, 11182.0], [40.0, 11182.0], [40.1, 11182.0], [40.2, 11182.0], [40.3, 11259.0], [40.4, 11259.0], [40.5, 11260.0], [40.6, 11260.0], [40.7, 11317.0], [40.8, 11317.0], [40.9, 11328.0], [41.0, 11328.0], [41.1, 11337.0], [41.2, 11337.0], [41.3, 11363.0], [41.4, 11363.0], [41.5, 11388.0], [41.6, 11388.0], [41.7, 11388.0], [41.8, 11388.0], [41.9, 11399.0], [42.0, 11399.0], [42.1, 11502.0], [42.2, 11502.0], [42.3, 11506.0], [42.4, 11506.0], [42.5, 11534.0], [42.6, 11534.0], [42.7, 11552.0], [42.8, 11552.0], [42.9, 11555.0], [43.0, 11555.0], [43.1, 11616.0], [43.2, 11616.0], [43.3, 11668.0], [43.4, 11668.0], [43.5, 11768.0], [43.6, 11768.0], [43.7, 11812.0], [43.8, 11812.0], [43.9, 11815.0], [44.0, 11815.0], [44.1, 11904.0], [44.2, 11904.0], [44.3, 11956.0], [44.4, 11956.0], [44.5, 11996.0], [44.6, 11996.0], [44.7, 12094.0], [44.8, 12094.0], [44.9, 12136.0], [45.0, 12136.0], [45.1, 12216.0], [45.2, 12216.0], [45.3, 12301.0], [45.4, 12301.0], [45.5, 12399.0], [45.6, 12399.0], [45.7, 12498.0], [45.8, 12498.0], [45.9, 12514.0], [46.0, 12514.0], [46.1, 12554.0], [46.2, 12554.0], [46.3, 12561.0], [46.4, 12561.0], [46.5, 12590.0], [46.6, 12590.0], [46.7, 12592.0], [46.8, 12592.0], [46.9, 12620.0], [47.0, 12620.0], [47.1, 12628.0], [47.2, 12628.0], [47.3, 12669.0], [47.4, 12669.0], [47.5, 12681.0], [47.6, 12681.0], [47.7, 12703.0], [47.8, 12703.0], [47.9, 12732.0], [48.0, 12732.0], [48.1, 12768.0], [48.2, 12768.0], [48.3, 12800.0], [48.4, 12800.0], [48.5, 12812.0], [48.6, 12812.0], [48.7, 12912.0], [48.8, 12912.0], [48.9, 12915.0], [49.0, 12915.0], [49.1, 12992.0], [49.2, 12992.0], [49.3, 12999.0], [49.4, 12999.0], [49.5, 13043.0], [49.6, 13043.0], [49.7, 13065.0], [49.8, 13065.0], [49.9, 13194.0], [50.0, 13194.0], [50.1, 13199.0], [50.2, 13199.0], [50.3, 13219.0], [50.4, 13219.0], [50.5, 13233.0], [50.6, 13233.0], [50.7, 13234.0], [50.8, 13234.0], [50.9, 13246.0], [51.0, 13246.0], [51.1, 13287.0], [51.2, 13287.0], [51.3, 13349.0], [51.4, 13349.0], [51.5, 13383.0], [51.6, 13383.0], [51.7, 13397.0], [51.8, 13397.0], [51.9, 13408.0], [52.0, 13408.0], [52.1, 13420.0], [52.2, 13420.0], [52.3, 13430.0], [52.4, 13430.0], [52.5, 13460.0], [52.6, 13460.0], [52.7, 13465.0], [52.8, 13465.0], [52.9, 13496.0], [53.0, 13496.0], [53.1, 13503.0], [53.2, 13503.0], [53.3, 13511.0], [53.4, 13511.0], [53.5, 13550.0], [53.6, 13550.0], [53.7, 13595.0], [53.8, 13595.0], [53.9, 13616.0], [54.0, 13616.0], [54.1, 13625.0], [54.2, 13625.0], [54.3, 13638.0], [54.4, 13638.0], [54.5, 13645.0], [54.6, 13645.0], [54.7, 13660.0], [54.8, 13660.0], [54.9, 13714.0], [55.0, 13714.0], [55.1, 13724.0], [55.2, 13724.0], [55.3, 13735.0], [55.4, 13735.0], [55.5, 13804.0], [55.6, 13804.0], [55.7, 13810.0], [55.8, 13810.0], [55.9, 13820.0], [56.0, 13820.0], [56.1, 13832.0], [56.2, 13832.0], [56.3, 13833.0], [56.4, 13833.0], [56.5, 13861.0], [56.6, 13861.0], [56.7, 13912.0], [56.8, 13912.0], [56.9, 13969.0], [57.0, 13969.0], [57.1, 14031.0], [57.2, 14031.0], [57.3, 14039.0], [57.4, 14039.0], [57.5, 14147.0], [57.6, 14147.0], [57.7, 14177.0], [57.8, 14177.0], [57.9, 14234.0], [58.0, 14234.0], [58.1, 14260.0], [58.2, 14260.0], [58.3, 14297.0], [58.4, 14297.0], [58.5, 14357.0], [58.6, 14357.0], [58.7, 14377.0], [58.8, 14377.0], [58.9, 14405.0], [59.0, 14405.0], [59.1, 14563.0], [59.2, 14563.0], [59.3, 14707.0], [59.4, 14707.0], [59.5, 14756.0], [59.6, 14756.0], [59.7, 14791.0], [59.8, 14791.0], [59.9, 14833.0], [60.0, 14833.0], [60.1, 14844.0], [60.2, 14844.0], [60.3, 14909.0], [60.4, 14909.0], [60.5, 14915.0], [60.6, 14915.0], [60.7, 14932.0], [60.8, 14932.0], [60.9, 15010.0], [61.0, 15010.0], [61.1, 15021.0], [61.2, 15021.0], [61.3, 15037.0], [61.4, 15037.0], [61.5, 15085.0], [61.6, 15085.0], [61.7, 15092.0], [61.8, 15092.0], [61.9, 15120.0], [62.0, 15120.0], [62.1, 15124.0], [62.2, 15124.0], [62.3, 15130.0], [62.4, 15130.0], [62.5, 15149.0], [62.6, 15149.0], [62.7, 15157.0], [62.8, 15157.0], [62.9, 15161.0], [63.0, 15161.0], [63.1, 15161.0], [63.2, 15161.0], [63.3, 15179.0], [63.4, 15179.0], [63.5, 15183.0], [63.6, 15183.0], [63.7, 15239.0], [63.8, 15239.0], [63.9, 15256.0], [64.0, 15256.0], [64.1, 15282.0], [64.2, 15282.0], [64.3, 15297.0], [64.4, 15297.0], [64.5, 15331.0], [64.6, 15331.0], [64.7, 15357.0], [64.8, 15357.0], [64.9, 15448.0], [65.0, 15448.0], [65.1, 15477.0], [65.2, 15477.0], [65.3, 15495.0], [65.4, 15495.0], [65.5, 15506.0], [65.6, 15506.0], [65.7, 15575.0], [65.8, 15575.0], [65.9, 15582.0], [66.0, 15582.0], [66.1, 15591.0], [66.2, 15591.0], [66.3, 15640.0], [66.4, 15640.0], [66.5, 15649.0], [66.6, 15649.0], [66.7, 15665.0], [66.8, 15665.0], [66.9, 15684.0], [67.0, 15684.0], [67.1, 15694.0], [67.2, 15694.0], [67.3, 15697.0], [67.4, 15697.0], [67.5, 15705.0], [67.6, 15705.0], [67.7, 15727.0], [67.8, 15727.0], [67.9, 15752.0], [68.0, 15752.0], [68.1, 15761.0], [68.2, 15761.0], [68.3, 15773.0], [68.4, 15773.0], [68.5, 15774.0], [68.6, 15774.0], [68.7, 15787.0], [68.8, 15787.0], [68.9, 15834.0], [69.0, 15834.0], [69.1, 15837.0], [69.2, 15837.0], [69.3, 15848.0], [69.4, 15848.0], [69.5, 15851.0], [69.6, 15851.0], [69.7, 15865.0], [69.8, 15865.0], [69.9, 15886.0], [70.0, 15886.0], [70.1, 15890.0], [70.2, 15890.0], [70.3, 15925.0], [70.4, 15925.0], [70.5, 15968.0], [70.6, 15968.0], [70.7, 15970.0], [70.8, 15970.0], [70.9, 15971.0], [71.0, 15971.0], [71.1, 15985.0], [71.2, 15985.0], [71.3, 16002.0], [71.4, 16002.0], [71.5, 16025.0], [71.6, 16025.0], [71.7, 16091.0], [71.8, 16091.0], [71.9, 16099.0], [72.0, 16099.0], [72.1, 16112.0], [72.2, 16112.0], [72.3, 16172.0], [72.4, 16172.0], [72.5, 16181.0], [72.6, 16181.0], [72.7, 16203.0], [72.8, 16203.0], [72.9, 16228.0], [73.0, 16228.0], [73.1, 16263.0], [73.2, 16263.0], [73.3, 16273.0], [73.4, 16273.0], [73.5, 16280.0], [73.6, 16280.0], [73.7, 16281.0], [73.8, 16281.0], [73.9, 16282.0], [74.0, 16282.0], [74.1, 16284.0], [74.2, 16284.0], [74.3, 16332.0], [74.4, 16332.0], [74.5, 16351.0], [74.6, 16351.0], [74.7, 16365.0], [74.8, 16365.0], [74.9, 16373.0], [75.0, 16373.0], [75.1, 16386.0], [75.2, 16386.0], [75.3, 16403.0], [75.4, 16403.0], [75.5, 16456.0], [75.6, 16456.0], [75.7, 16464.0], [75.8, 16464.0], [75.9, 16468.0], [76.0, 16468.0], [76.1, 16468.0], [76.2, 16468.0], [76.3, 16480.0], [76.4, 16480.0], [76.5, 16488.0], [76.6, 16488.0], [76.7, 16504.0], [76.8, 16504.0], [76.9, 16508.0], [77.0, 16508.0], [77.1, 16524.0], [77.2, 16524.0], [77.3, 16561.0], [77.4, 16561.0], [77.5, 16617.0], [77.6, 16617.0], [77.7, 16618.0], [77.8, 16618.0], [77.9, 16620.0], [78.0, 16620.0], [78.1, 16627.0], [78.2, 16627.0], [78.3, 16630.0], [78.4, 16630.0], [78.5, 16656.0], [78.6, 16656.0], [78.7, 16702.0], [78.8, 16702.0], [78.9, 16719.0], [79.0, 16719.0], [79.1, 16778.0], [79.2, 16778.0], [79.3, 16779.0], [79.4, 16779.0], [79.5, 16786.0], [79.6, 16786.0], [79.7, 16787.0], [79.8, 16787.0], [79.9, 16800.0], [80.0, 16800.0], [80.1, 16811.0], [80.2, 16811.0], [80.3, 16829.0], [80.4, 16829.0], [80.5, 16841.0], [80.6, 16841.0], [80.7, 16855.0], [80.8, 16855.0], [80.9, 16869.0], [81.0, 16869.0], [81.1, 16922.0], [81.2, 16922.0], [81.3, 17028.0], [81.4, 17028.0], [81.5, 17166.0], [81.6, 17166.0], [81.7, 17181.0], [81.8, 17181.0], [81.9, 17189.0], [82.0, 17189.0], [82.1, 17196.0], [82.2, 17196.0], [82.3, 17213.0], [82.4, 17213.0], [82.5, 17216.0], [82.6, 17216.0], [82.7, 17222.0], [82.8, 17222.0], [82.9, 17229.0], [83.0, 17229.0], [83.1, 17278.0], [83.2, 17278.0], [83.3, 17293.0], [83.4, 17293.0], [83.5, 17294.0], [83.6, 17294.0], [83.7, 17300.0], [83.8, 17300.0], [83.9, 17301.0], [84.0, 17301.0], [84.1, 17322.0], [84.2, 17322.0], [84.3, 17331.0], [84.4, 17331.0], [84.5, 17337.0], [84.6, 17337.0], [84.7, 17343.0], [84.8, 17343.0], [84.9, 17372.0], [85.0, 17372.0], [85.1, 17400.0], [85.2, 17400.0], [85.3, 17412.0], [85.4, 17412.0], [85.5, 17436.0], [85.6, 17436.0], [85.7, 17468.0], [85.8, 17468.0], [85.9, 17477.0], [86.0, 17477.0], [86.1, 17487.0], [86.2, 17487.0], [86.3, 17488.0], [86.4, 17488.0], [86.5, 17497.0], [86.6, 17497.0], [86.7, 17507.0], [86.8, 17507.0], [86.9, 17521.0], [87.0, 17521.0], [87.1, 17530.0], [87.2, 17530.0], [87.3, 17530.0], [87.4, 17530.0], [87.5, 17533.0], [87.6, 17533.0], [87.7, 17535.0], [87.8, 17535.0], [87.9, 17538.0], [88.0, 17538.0], [88.1, 17538.0], [88.2, 17538.0], [88.3, 17547.0], [88.4, 17547.0], [88.5, 17551.0], [88.6, 17551.0], [88.7, 17552.0], [88.8, 17552.0], [88.9, 17566.0], [89.0, 17566.0], [89.1, 17571.0], [89.2, 17571.0], [89.3, 17592.0], [89.4, 17592.0], [89.5, 17596.0], [89.6, 17596.0], [89.7, 17598.0], [89.8, 17598.0], [89.9, 17602.0], [90.0, 17602.0], [90.1, 17610.0], [90.2, 17610.0], [90.3, 17619.0], [90.4, 17619.0], [90.5, 17635.0], [90.6, 17635.0], [90.7, 17646.0], [90.8, 17646.0], [90.9, 17665.0], [91.0, 17665.0], [91.1, 17672.0], [91.2, 17672.0], [91.3, 17684.0], [91.4, 17684.0], [91.5, 17700.0], [91.6, 17700.0], [91.7, 17710.0], [91.8, 17710.0], [91.9, 17712.0], [92.0, 17712.0], [92.1, 17722.0], [92.2, 17722.0], [92.3, 17756.0], [92.4, 17756.0], [92.5, 17772.0], [92.6, 17772.0], [92.7, 17773.0], [92.8, 17773.0], [92.9, 17779.0], [93.0, 17779.0], [93.1, 17794.0], [93.2, 17794.0], [93.3, 17797.0], [93.4, 17797.0], [93.5, 17806.0], [93.6, 17806.0], [93.7, 17881.0], [93.8, 17881.0], [93.9, 17883.0], [94.0, 17883.0], [94.1, 17884.0], [94.2, 17884.0], [94.3, 17894.0], [94.4, 17894.0], [94.5, 17967.0], [94.6, 17967.0], [94.7, 18025.0], [94.8, 18025.0], [94.9, 18041.0], [95.0, 18041.0], [95.1, 18103.0], [95.2, 18103.0], [95.3, 18193.0], [95.4, 18193.0], [95.5, 18261.0], [95.6, 18261.0], [95.7, 18473.0], [95.8, 18473.0], [95.9, 18612.0], [96.0, 18612.0], [96.1, 19245.0], [96.2, 19245.0], [96.3, 19431.0], [96.4, 19431.0], [96.5, 19600.0], [96.6, 19600.0], [96.7, 19607.0], [96.8, 19607.0], [96.9, 19881.0], [97.0, 19881.0], [97.1, 19907.0], [97.2, 19907.0], [97.3, 20028.0], [97.4, 20028.0], [97.5, 20051.0], [97.6, 20051.0], [97.7, 20409.0], [97.8, 20409.0], [97.9, 20519.0], [98.0, 20519.0], [98.1, 21207.0], [98.2, 21207.0], [98.3, 21907.0], [98.4, 21907.0], [98.5, 22000.0], [98.6, 22000.0], [98.7, 22171.0], [98.8, 22171.0], [98.9, 22266.0], [99.0, 22266.0], [99.1, 22663.0], [99.2, 22663.0], [99.3, 22778.0], [99.4, 22778.0], [99.5, 23103.0], [99.6, 23103.0], [99.7, 23550.0], [99.8, 23550.0], [99.9, 25520.0], [100.0, 25520.0]], "isOverall": false, "label": "Store Detail", "isController": false}, {"data": [[0.0, 34.0], [0.1, 34.0], [0.2, 37.0], [0.3, 37.0], [0.4, 37.0], [0.5, 37.0], [0.6, 37.0], [0.7, 40.0], [0.8, 40.0], [0.9, 40.0], [1.0, 42.0], [1.1, 42.0], [1.2, 42.0], [1.3, 42.0], [1.4, 44.0], [1.5, 44.0], [1.6, 44.0], [1.7, 44.0], [1.8, 45.0], [1.9, 45.0], [2.0, 45.0], [2.1, 45.0], [2.2, 45.0], [2.3, 45.0], [2.4, 46.0], [2.5, 46.0], [2.6, 47.0], [2.7, 47.0], [2.8, 47.0], [2.9, 48.0], [3.0, 48.0], [3.1, 48.0], [3.2, 48.0], [3.3, 48.0], [3.4, 48.0], [3.5, 48.0], [3.6, 48.0], [3.7, 48.0], [3.8, 48.0], [3.9, 48.0], [4.0, 49.0], [4.1, 49.0], [4.2, 49.0], [4.3, 49.0], [4.4, 49.0], [4.5, 49.0], [4.6, 49.0], [4.7, 49.0], [4.8, 50.0], [4.9, 50.0], [5.0, 50.0], [5.1, 50.0], [5.2, 52.0], [5.3, 52.0], [5.4, 52.0], [5.5, 52.0], [5.6, 52.0], [5.7, 52.0], [5.8, 53.0], [5.9, 53.0], [6.0, 53.0], [6.1, 53.0], [6.2, 54.0], [6.3, 54.0], [6.4, 54.0], [6.5, 54.0], [6.6, 54.0], [6.7, 54.0], [6.8, 54.0], [6.9, 54.0], [7.0, 54.0], [7.1, 54.0], [7.2, 55.0], [7.3, 55.0], [7.4, 55.0], [7.5, 55.0], [7.6, 55.0], [7.7, 56.0], [7.8, 56.0], [7.9, 56.0], [8.0, 56.0], [8.1, 56.0], [8.2, 56.0], [8.3, 56.0], [8.4, 56.0], [8.5, 56.0], [8.6, 56.0], [8.7, 57.0], [8.8, 57.0], [8.9, 57.0], [9.0, 57.0], [9.1, 57.0], [9.2, 57.0], [9.3, 57.0], [9.4, 57.0], [9.5, 58.0], [9.6, 58.0], [9.7, 58.0], [9.8, 58.0], [9.9, 59.0], [10.0, 59.0], [10.1, 59.0], [10.2, 59.0], [10.3, 59.0], [10.4, 59.0], [10.5, 59.0], [10.6, 59.0], [10.7, 60.0], [10.8, 60.0], [10.9, 60.0], [11.0, 60.0], [11.1, 60.0], [11.2, 60.0], [11.3, 60.0], [11.4, 60.0], [11.5, 61.0], [11.6, 61.0], [11.7, 61.0], [11.8, 61.0], [11.9, 61.0], [12.0, 61.0], [12.1, 62.0], [12.2, 62.0], [12.3, 62.0], [12.4, 62.0], [12.5, 62.0], [12.6, 62.0], [12.7, 63.0], [12.8, 63.0], [12.9, 63.0], [13.0, 63.0], [13.1, 63.0], [13.2, 63.0], [13.3, 63.0], [13.4, 63.0], [13.5, 64.0], [13.6, 64.0], [13.7, 64.0], [13.8, 64.0], [13.9, 64.0], [14.0, 64.0], [14.1, 65.0], [14.2, 65.0], [14.3, 65.0], [14.4, 65.0], [14.5, 65.0], [14.6, 65.0], [14.7, 66.0], [14.8, 66.0], [14.9, 66.0], [15.0, 66.0], [15.1, 66.0], [15.2, 66.0], [15.3, 66.0], [15.4, 66.0], [15.5, 67.0], [15.6, 67.0], [15.7, 67.0], [15.8, 67.0], [15.9, 68.0], [16.0, 68.0], [16.1, 68.0], [16.2, 68.0], [16.3, 69.0], [16.4, 69.0], [16.5, 70.0], [16.6, 70.0], [16.7, 70.0], [16.8, 70.0], [16.9, 70.0], [17.0, 70.0], [17.1, 70.0], [17.2, 70.0], [17.3, 71.0], [17.4, 71.0], [17.5, 71.0], [17.6, 71.0], [17.7, 71.0], [17.8, 71.0], [17.9, 71.0], [18.0, 71.0], [18.1, 71.0], [18.2, 71.0], [18.3, 72.0], [18.4, 72.0], [18.5, 72.0], [18.6, 72.0], [18.7, 72.0], [18.8, 72.0], [18.9, 72.0], [19.0, 72.0], [19.1, 72.0], [19.2, 72.0], [19.3, 72.0], [19.4, 72.0], [19.5, 72.0], [19.6, 73.0], [19.7, 73.0], [19.8, 73.0], [19.9, 73.0], [20.0, 73.0], [20.1, 73.0], [20.2, 73.0], [20.3, 74.0], [20.4, 74.0], [20.5, 74.0], [20.6, 74.0], [20.7, 74.0], [20.8, 74.0], [20.9, 74.0], [21.0, 74.0], [21.1, 75.0], [21.2, 75.0], [21.3, 75.0], [21.4, 75.0], [21.5, 75.0], [21.6, 75.0], [21.7, 75.0], [21.8, 75.0], [21.9, 75.0], [22.0, 75.0], [22.1, 76.0], [22.2, 76.0], [22.3, 76.0], [22.4, 76.0], [22.5, 77.0], [22.6, 77.0], [22.7, 77.0], [22.8, 77.0], [22.9, 77.0], [23.0, 77.0], [23.1, 78.0], [23.2, 78.0], [23.3, 78.0], [23.4, 78.0], [23.5, 78.0], [23.6, 78.0], [23.7, 78.0], [23.8, 78.0], [23.9, 78.0], [24.0, 78.0], [24.1, 79.0], [24.2, 79.0], [24.3, 79.0], [24.4, 79.0], [24.5, 79.0], [24.6, 79.0], [24.7, 79.0], [24.8, 79.0], [24.9, 79.0], [25.0, 79.0], [25.1, 79.0], [25.2, 79.0], [25.3, 80.0], [25.4, 80.0], [25.5, 80.0], [25.6, 81.0], [25.7, 81.0], [25.8, 81.0], [25.9, 81.0], [26.0, 81.0], [26.1, 81.0], [26.2, 81.0], [26.3, 82.0], [26.4, 82.0], [26.5, 82.0], [26.6, 82.0], [26.7, 82.0], [26.8, 82.0], [26.9, 82.0], [27.0, 82.0], [27.1, 82.0], [27.2, 82.0], [27.3, 82.0], [27.4, 82.0], [27.5, 83.0], [27.6, 83.0], [27.7, 83.0], [27.8, 83.0], [27.9, 83.0], [28.0, 83.0], [28.1, 84.0], [28.2, 84.0], [28.3, 84.0], [28.4, 84.0], [28.5, 84.0], [28.6, 84.0], [28.7, 84.0], [28.8, 84.0], [28.9, 85.0], [29.0, 85.0], [29.1, 85.0], [29.2, 85.0], [29.3, 85.0], [29.4, 85.0], [29.5, 85.0], [29.6, 85.0], [29.7, 85.0], [29.8, 85.0], [29.9, 86.0], [30.0, 86.0], [30.1, 86.0], [30.2, 86.0], [30.3, 86.0], [30.4, 86.0], [30.5, 87.0], [30.6, 87.0], [30.7, 87.0], [30.8, 87.0], [30.9, 87.0], [31.0, 87.0], [31.1, 87.0], [31.2, 87.0], [31.3, 88.0], [31.4, 88.0], [31.5, 88.0], [31.6, 88.0], [31.7, 88.0], [31.8, 88.0], [31.9, 88.0], [32.0, 88.0], [32.1, 88.0], [32.2, 90.0], [32.3, 90.0], [32.4, 90.0], [32.5, 90.0], [32.6, 90.0], [32.7, 90.0], [32.8, 90.0], [32.9, 90.0], [33.0, 90.0], [33.1, 90.0], [33.2, 90.0], [33.3, 90.0], [33.4, 90.0], [33.5, 91.0], [33.6, 91.0], [33.7, 91.0], [33.8, 91.0], [33.9, 91.0], [34.0, 91.0], [34.1, 93.0], [34.2, 93.0], [34.3, 94.0], [34.4, 94.0], [34.5, 94.0], [34.6, 94.0], [34.7, 94.0], [34.8, 94.0], [34.9, 96.0], [35.0, 96.0], [35.1, 96.0], [35.2, 96.0], [35.3, 96.0], [35.4, 96.0], [35.5, 96.0], [35.6, 96.0], [35.7, 96.0], [35.8, 96.0], [35.9, 96.0], [36.0, 96.0], [36.1, 96.0], [36.2, 96.0], [36.3, 97.0], [36.4, 97.0], [36.5, 97.0], [36.6, 97.0], [36.7, 97.0], [36.8, 97.0], [36.9, 98.0], [37.0, 98.0], [37.1, 98.0], [37.2, 98.0], [37.3, 99.0], [37.4, 99.0], [37.5, 99.0], [37.6, 99.0], [37.7, 99.0], [37.8, 99.0], [37.9, 99.0], [38.0, 99.0], [38.1, 99.0], [38.2, 99.0], [38.3, 99.0], [38.4, 99.0], [38.5, 99.0], [38.6, 99.0], [38.7, 99.0], [38.8, 99.0], [38.9, 100.0], [39.0, 100.0], [39.1, 100.0], [39.2, 100.0], [39.3, 100.0], [39.4, 100.0], [39.5, 101.0], [39.6, 101.0], [39.7, 101.0], [39.8, 101.0], [39.9, 101.0], [40.0, 101.0], [40.1, 101.0], [40.2, 101.0], [40.3, 102.0], [40.4, 102.0], [40.5, 102.0], [40.6, 102.0], [40.7, 102.0], [40.8, 102.0], [40.9, 102.0], [41.0, 102.0], [41.1, 102.0], [41.2, 102.0], [41.3, 102.0], [41.4, 102.0], [41.5, 102.0], [41.6, 102.0], [41.7, 102.0], [41.8, 102.0], [41.9, 103.0], [42.0, 103.0], [42.1, 103.0], [42.2, 103.0], [42.3, 103.0], [42.4, 103.0], [42.5, 103.0], [42.6, 103.0], [42.7, 104.0], [42.8, 104.0], [42.9, 104.0], [43.0, 104.0], [43.1, 104.0], [43.2, 104.0], [43.3, 105.0], [43.4, 105.0], [43.5, 106.0], [43.6, 106.0], [43.7, 106.0], [43.8, 106.0], [43.9, 106.0], [44.0, 106.0], [44.1, 106.0], [44.2, 106.0], [44.3, 107.0], [44.4, 107.0], [44.5, 107.0], [44.6, 107.0], [44.7, 107.0], [44.8, 107.0], [44.9, 107.0], [45.0, 107.0], [45.1, 108.0], [45.2, 108.0], [45.3, 108.0], [45.4, 108.0], [45.5, 108.0], [45.6, 108.0], [45.7, 108.0], [45.8, 108.0], [45.9, 109.0], [46.0, 109.0], [46.1, 109.0], [46.2, 110.0], [46.3, 110.0], [46.4, 110.0], [46.5, 110.0], [46.6, 110.0], [46.7, 110.0], [46.8, 110.0], [46.9, 112.0], [47.0, 112.0], [47.1, 112.0], [47.2, 112.0], [47.3, 112.0], [47.4, 112.0], [47.5, 112.0], [47.6, 113.0], [47.7, 113.0], [47.8, 113.0], [47.9, 114.0], [48.0, 114.0], [48.1, 114.0], [48.2, 114.0], [48.3, 114.0], [48.4, 114.0], [48.5, 114.0], [48.6, 114.0], [48.7, 114.0], [48.8, 114.0], [48.9, 115.0], [49.0, 115.0], [49.1, 115.0], [49.2, 115.0], [49.3, 115.0], [49.4, 115.0], [49.5, 115.0], [49.6, 116.0], [49.7, 116.0], [49.8, 116.0], [49.9, 116.0], [50.0, 117.0], [50.1, 117.0], [50.2, 117.0], [50.3, 117.0], [50.4, 117.0], [50.5, 117.0], [50.6, 118.0], [50.7, 118.0], [50.8, 118.0], [50.9, 118.0], [51.0, 118.0], [51.1, 118.0], [51.2, 119.0], [51.3, 119.0], [51.4, 119.0], [51.5, 120.0], [51.6, 120.0], [51.7, 120.0], [51.8, 120.0], [51.9, 121.0], [52.0, 121.0], [52.1, 121.0], [52.2, 121.0], [52.3, 121.0], [52.4, 121.0], [52.5, 121.0], [52.6, 122.0], [52.7, 122.0], [52.8, 122.0], [52.9, 123.0], [53.0, 123.0], [53.1, 123.0], [53.2, 124.0], [53.3, 124.0], [53.4, 124.0], [53.5, 124.0], [53.6, 124.0], [53.7, 124.0], [53.8, 124.0], [53.9, 125.0], [54.0, 125.0], [54.1, 125.0], [54.2, 126.0], [54.3, 126.0], [54.4, 126.0], [54.5, 127.0], [54.6, 127.0], [54.7, 127.0], [54.8, 127.0], [54.9, 129.0], [55.0, 129.0], [55.1, 130.0], [55.2, 130.0], [55.3, 131.0], [55.4, 131.0], [55.5, 131.0], [55.6, 131.0], [55.7, 131.0], [55.8, 131.0], [55.9, 131.0], [56.0, 131.0], [56.1, 133.0], [56.2, 133.0], [56.3, 133.0], [56.4, 133.0], [56.5, 134.0], [56.6, 134.0], [56.7, 135.0], [56.8, 135.0], [56.9, 135.0], [57.0, 135.0], [57.1, 135.0], [57.2, 135.0], [57.3, 135.0], [57.4, 135.0], [57.5, 135.0], [57.6, 135.0], [57.7, 137.0], [57.8, 137.0], [57.9, 137.0], [58.0, 137.0], [58.1, 137.0], [58.2, 137.0], [58.3, 138.0], [58.4, 138.0], [58.5, 138.0], [58.6, 138.0], [58.7, 139.0], [58.8, 139.0], [58.9, 139.0], [59.0, 139.0], [59.1, 139.0], [59.2, 139.0], [59.3, 139.0], [59.4, 139.0], [59.5, 139.0], [59.6, 139.0], [59.7, 140.0], [59.8, 140.0], [59.9, 141.0], [60.0, 141.0], [60.1, 141.0], [60.2, 141.0], [60.3, 142.0], [60.4, 142.0], [60.5, 142.0], [60.6, 142.0], [60.7, 142.0], [60.8, 142.0], [60.9, 142.0], [61.0, 142.0], [61.1, 143.0], [61.2, 143.0], [61.3, 143.0], [61.4, 143.0], [61.5, 143.0], [61.6, 143.0], [61.7, 144.0], [61.8, 144.0], [61.9, 144.0], [62.0, 144.0], [62.1, 144.0], [62.2, 144.0], [62.3, 144.0], [62.4, 144.0], [62.5, 144.0], [62.6, 144.0], [62.7, 146.0], [62.8, 146.0], [62.9, 146.0], [63.0, 146.0], [63.1, 147.0], [63.2, 147.0], [63.3, 148.0], [63.4, 148.0], [63.5, 149.0], [63.6, 149.0], [63.7, 150.0], [63.8, 150.0], [63.9, 150.0], [64.0, 150.0], [64.1, 150.0], [64.2, 150.0], [64.3, 151.0], [64.4, 151.0], [64.5, 152.0], [64.6, 152.0], [64.7, 153.0], [64.8, 153.0], [64.9, 154.0], [65.0, 154.0], [65.1, 155.0], [65.2, 155.0], [65.3, 155.0], [65.4, 155.0], [65.5, 156.0], [65.6, 156.0], [65.7, 157.0], [65.8, 157.0], [65.9, 158.0], [66.0, 158.0], [66.1, 159.0], [66.2, 159.0], [66.3, 160.0], [66.4, 160.0], [66.5, 160.0], [66.6, 160.0], [66.7, 161.0], [66.8, 161.0], [66.9, 161.0], [67.0, 161.0], [67.1, 162.0], [67.2, 162.0], [67.3, 163.0], [67.4, 163.0], [67.5, 163.0], [67.6, 163.0], [67.7, 163.0], [67.8, 163.0], [67.9, 164.0], [68.0, 164.0], [68.1, 165.0], [68.2, 165.0], [68.3, 166.0], [68.4, 166.0], [68.5, 168.0], [68.6, 168.0], [68.7, 168.0], [68.8, 168.0], [68.9, 168.0], [69.0, 168.0], [69.1, 169.0], [69.2, 169.0], [69.3, 170.0], [69.4, 170.0], [69.5, 170.0], [69.6, 170.0], [69.7, 171.0], [69.8, 171.0], [69.9, 171.0], [70.0, 171.0], [70.1, 173.0], [70.2, 173.0], [70.3, 174.0], [70.4, 174.0], [70.5, 174.0], [70.6, 174.0], [70.7, 175.0], [70.8, 175.0], [70.9, 177.0], [71.0, 177.0], [71.1, 178.0], [71.2, 178.0], [71.3, 178.0], [71.4, 178.0], [71.5, 179.0], [71.6, 179.0], [71.7, 180.0], [71.8, 180.0], [71.9, 183.0], [72.0, 183.0], [72.1, 184.0], [72.2, 184.0], [72.3, 184.0], [72.4, 184.0], [72.5, 184.0], [72.6, 184.0], [72.7, 184.0], [72.8, 184.0], [72.9, 185.0], [73.0, 185.0], [73.1, 185.0], [73.2, 185.0], [73.3, 186.0], [73.4, 186.0], [73.5, 186.0], [73.6, 186.0], [73.7, 186.0], [73.8, 186.0], [73.9, 188.0], [74.0, 188.0], [74.1, 188.0], [74.2, 188.0], [74.3, 189.0], [74.4, 189.0], [74.5, 190.0], [74.6, 190.0], [74.7, 190.0], [74.8, 190.0], [74.9, 191.0], [75.0, 191.0], [75.1, 192.0], [75.2, 192.0], [75.3, 194.0], [75.4, 194.0], [75.5, 195.0], [75.6, 195.0], [75.7, 195.0], [75.8, 195.0], [75.9, 196.0], [76.0, 196.0], [76.1, 198.0], [76.2, 198.0], [76.3, 198.0], [76.4, 198.0], [76.5, 201.0], [76.6, 201.0], [76.7, 202.0], [76.8, 202.0], [76.9, 204.0], [77.0, 204.0], [77.1, 205.0], [77.2, 205.0], [77.3, 206.0], [77.4, 206.0], [77.5, 206.0], [77.6, 206.0], [77.7, 206.0], [77.8, 206.0], [77.9, 207.0], [78.0, 207.0], [78.1, 209.0], [78.2, 209.0], [78.3, 210.0], [78.4, 210.0], [78.5, 210.0], [78.6, 210.0], [78.7, 211.0], [78.8, 211.0], [78.9, 211.0], [79.0, 211.0], [79.1, 213.0], [79.2, 213.0], [79.3, 214.0], [79.4, 214.0], [79.5, 215.0], [79.6, 215.0], [79.7, 216.0], [79.8, 216.0], [79.9, 217.0], [80.0, 217.0], [80.1, 221.0], [80.2, 221.0], [80.3, 223.0], [80.4, 223.0], [80.5, 226.0], [80.6, 226.0], [80.7, 228.0], [80.8, 228.0], [80.9, 230.0], [81.0, 230.0], [81.1, 234.0], [81.2, 234.0], [81.3, 236.0], [81.4, 236.0], [81.5, 236.0], [81.6, 236.0], [81.7, 238.0], [81.8, 238.0], [81.9, 238.0], [82.0, 238.0], [82.1, 239.0], [82.2, 239.0], [82.3, 240.0], [82.4, 240.0], [82.5, 241.0], [82.6, 241.0], [82.7, 241.0], [82.8, 241.0], [82.9, 244.0], [83.0, 244.0], [83.1, 244.0], [83.2, 244.0], [83.3, 247.0], [83.4, 247.0], [83.5, 247.0], [83.6, 247.0], [83.7, 248.0], [83.8, 248.0], [83.9, 248.0], [84.0, 248.0], [84.1, 249.0], [84.2, 249.0], [84.3, 249.0], [84.4, 249.0], [84.5, 250.0], [84.6, 250.0], [84.7, 254.0], [84.8, 254.0], [84.9, 255.0], [85.0, 255.0], [85.1, 256.0], [85.2, 256.0], [85.3, 257.0], [85.4, 257.0], [85.5, 258.0], [85.6, 258.0], [85.7, 259.0], [85.8, 259.0], [85.9, 260.0], [86.0, 260.0], [86.1, 266.0], [86.2, 266.0], [86.3, 269.0], [86.4, 269.0], [86.5, 276.0], [86.6, 276.0], [86.7, 278.0], [86.8, 278.0], [86.9, 278.0], [87.0, 278.0], [87.1, 280.0], [87.2, 280.0], [87.3, 280.0], [87.4, 280.0], [87.5, 287.0], [87.6, 287.0], [87.7, 288.0], [87.8, 288.0], [87.9, 291.0], [88.0, 291.0], [88.1, 296.0], [88.2, 296.0], [88.3, 298.0], [88.4, 298.0], [88.5, 300.0], [88.6, 300.0], [88.7, 304.0], [88.8, 304.0], [88.9, 305.0], [89.0, 305.0], [89.1, 306.0], [89.2, 306.0], [89.3, 308.0], [89.4, 308.0], [89.5, 310.0], [89.6, 310.0], [89.7, 312.0], [89.8, 312.0], [89.9, 312.0], [90.0, 312.0], [90.1, 316.0], [90.2, 316.0], [90.3, 316.0], [90.4, 316.0], [90.5, 319.0], [90.6, 319.0], [90.7, 322.0], [90.8, 322.0], [90.9, 323.0], [91.0, 323.0], [91.1, 324.0], [91.2, 324.0], [91.3, 326.0], [91.4, 326.0], [91.5, 334.0], [91.6, 334.0], [91.7, 335.0], [91.8, 335.0], [91.9, 336.0], [92.0, 336.0], [92.1, 339.0], [92.2, 339.0], [92.3, 342.0], [92.4, 342.0], [92.5, 344.0], [92.6, 344.0], [92.7, 364.0], [92.8, 364.0], [92.9, 369.0], [93.0, 369.0], [93.1, 369.0], [93.2, 369.0], [93.3, 371.0], [93.4, 371.0], [93.5, 372.0], [93.6, 372.0], [93.7, 373.0], [93.8, 373.0], [93.9, 373.0], [94.0, 373.0], [94.1, 373.0], [94.2, 373.0], [94.3, 374.0], [94.4, 374.0], [94.5, 374.0], [94.6, 374.0], [94.7, 376.0], [94.8, 376.0], [94.9, 384.0], [95.0, 384.0], [95.1, 385.0], [95.2, 385.0], [95.3, 385.0], [95.4, 385.0], [95.5, 386.0], [95.6, 386.0], [95.7, 388.0], [95.8, 388.0], [95.9, 389.0], [96.0, 389.0], [96.1, 393.0], [96.2, 393.0], [96.3, 394.0], [96.4, 394.0], [96.5, 397.0], [96.6, 397.0], [96.7, 405.0], [96.8, 405.0], [96.9, 410.0], [97.0, 410.0], [97.1, 419.0], [97.2, 419.0], [97.3, 419.0], [97.4, 419.0], [97.5, 422.0], [97.6, 422.0], [97.7, 427.0], [97.8, 427.0], [97.9, 430.0], [98.0, 430.0], [98.1, 438.0], [98.2, 438.0], [98.3, 451.0], [98.4, 451.0], [98.5, 451.0], [98.6, 451.0], [98.7, 456.0], [98.8, 456.0], [98.9, 465.0], [99.0, 465.0], [99.1, 553.0], [99.2, 553.0], [99.3, 597.0], [99.4, 597.0], [99.5, 623.0], [99.6, 623.0], [99.7, 980.0], [99.8, 980.0], [99.9, 1050.0], [100.0, 1050.0]], "isOverall": false, "label": "Queue Tickets", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 194.0, "series": [{"data": [[400.0, 3.0], [600.0, 3.0], [700.0, 2.0], [800.0, 4.0], [900.0, 3.0], [1000.0, 5.0], [1100.0, 2.0], [1200.0, 3.0], [1300.0, 3.0], [1400.0, 1.0], [1500.0, 3.0], [1600.0, 3.0], [1700.0, 2.0], [1800.0, 5.0], [2000.0, 2.0], [2100.0, 5.0], [2200.0, 6.0], [2400.0, 3.0], [2500.0, 4.0], [2600.0, 3.0], [2800.0, 4.0], [2700.0, 3.0], [2900.0, 3.0], [3000.0, 4.0], [3100.0, 1.0], [3200.0, 1.0], [3400.0, 1.0], [3500.0, 2.0], [3700.0, 2.0], [3600.0, 2.0], [3800.0, 2.0], [4000.0, 1.0], [4100.0, 4.0], [4300.0, 2.0], [4500.0, 2.0], [4400.0, 2.0], [4800.0, 2.0], [4900.0, 5.0], [5000.0, 2.0], [5100.0, 1.0], [5200.0, 2.0], [5300.0, 3.0], [5400.0, 1.0], [5500.0, 3.0], [5600.0, 1.0], [5700.0, 1.0], [5800.0, 1.0], [5900.0, 1.0], [6000.0, 2.0], [6100.0, 3.0], [6600.0, 2.0], [6500.0, 3.0], [6400.0, 1.0], [6800.0, 1.0], [6900.0, 1.0], [6700.0, 2.0], [7000.0, 2.0], [7100.0, 1.0], [7200.0, 2.0], [7500.0, 1.0], [7600.0, 5.0], [7700.0, 1.0], [8000.0, 4.0], [8100.0, 2.0], [8200.0, 5.0], [8400.0, 2.0], [8700.0, 15.0], [8600.0, 8.0], [8900.0, 5.0], [9000.0, 8.0], [8800.0, 8.0], [9100.0, 8.0], [9200.0, 1.0], [9300.0, 2.0], [9500.0, 1.0], [9400.0, 2.0], [9600.0, 4.0], [9700.0, 6.0], [10200.0, 4.0], [9800.0, 7.0], [9900.0, 6.0], [10000.0, 3.0], [10100.0, 3.0], [10400.0, 3.0], [10300.0, 2.0], [10500.0, 2.0], [10600.0, 3.0], [10700.0, 4.0], [10900.0, 5.0], [10800.0, 3.0], [11000.0, 4.0], [11100.0, 5.0], [11200.0, 5.0], [11700.0, 5.0], [11400.0, 4.0], [11600.0, 4.0], [11500.0, 1.0], [11800.0, 5.0], [11900.0, 6.0], [12100.0, 3.0], [12300.0, 1.0], [12600.0, 5.0], [12700.0, 2.0], [12800.0, 4.0], [12900.0, 3.0], [13000.0, 2.0], [13100.0, 5.0], [13300.0, 7.0], [13200.0, 4.0], [13400.0, 6.0], [13700.0, 1.0], [13500.0, 5.0], [13600.0, 4.0], [13900.0, 1.0], [14000.0, 2.0], [14100.0, 4.0], [14300.0, 3.0], [14400.0, 2.0], [14500.0, 1.0], [14700.0, 1.0], [14600.0, 1.0], [14800.0, 1.0], [14900.0, 1.0], [15000.0, 2.0], [15100.0, 5.0], [15200.0, 1.0], [15300.0, 2.0], [15400.0, 2.0], [15600.0, 1.0], [15500.0, 2.0], [15700.0, 8.0], [15800.0, 2.0], [16200.0, 3.0], [16000.0, 5.0], [15900.0, 3.0], [16100.0, 2.0], [16300.0, 2.0], [16500.0, 3.0], [16700.0, 4.0], [16800.0, 3.0], [16400.0, 3.0], [16600.0, 1.0], [16900.0, 3.0], [17000.0, 2.0], [17200.0, 3.0], [17300.0, 1.0], [17400.0, 4.0], [17100.0, 2.0], [17500.0, 3.0], [17600.0, 1.0], [17700.0, 3.0], [17800.0, 2.0], [17900.0, 6.0], [18300.0, 2.0], [19300.0, 1.0], [19000.0, 2.0], [18500.0, 3.0], [18700.0, 3.0], [18800.0, 1.0], [19700.0, 1.0], [20000.0, 1.0], [20100.0, 1.0], [21000.0, 1.0], [21200.0, 1.0], [21700.0, 1.0], [21900.0, 2.0], [22200.0, 1.0], [22300.0, 1.0], [22900.0, 1.0], [22600.0, 3.0], [23300.0, 1.0], [23100.0, 1.0], [23800.0, 1.0], [25200.0, 1.0], [26200.0, 1.0]], "isOverall": false, "label": "Store List", "isController": false}, {"data": [[500.0, 1.0], [2100.0, 1.0], [2200.0, 2.0], [2600.0, 2.0], [2700.0, 2.0], [3000.0, 2.0], [3100.0, 1.0], [3300.0, 2.0], [3200.0, 1.0], [3500.0, 1.0], [3700.0, 3.0], [3800.0, 1.0], [3900.0, 1.0], [4100.0, 2.0], [4300.0, 3.0], [4200.0, 1.0], [4500.0, 1.0], [4900.0, 3.0], [5100.0, 2.0], [5300.0, 2.0], [5200.0, 2.0], [5400.0, 3.0], [5600.0, 3.0], [5500.0, 1.0], [5900.0, 3.0], [6000.0, 2.0], [6200.0, 2.0], [6400.0, 1.0], [6500.0, 2.0], [6700.0, 2.0], [6800.0, 2.0], [6900.0, 2.0], [7000.0, 1.0], [7200.0, 2.0], [7300.0, 1.0], [7400.0, 1.0], [7500.0, 2.0], [7600.0, 1.0], [7800.0, 2.0], [7900.0, 4.0], [7700.0, 2.0], [8000.0, 5.0], [8100.0, 1.0], [8200.0, 4.0], [8500.0, 6.0], [8300.0, 2.0], [8400.0, 1.0], [8600.0, 4.0], [8700.0, 4.0], [8800.0, 4.0], [8900.0, 7.0], [9100.0, 5.0], [9000.0, 3.0], [9300.0, 5.0], [9400.0, 4.0], [9600.0, 7.0], [9500.0, 7.0], [9700.0, 7.0], [9800.0, 3.0], [9900.0, 4.0], [10000.0, 4.0], [10200.0, 3.0], [10100.0, 1.0], [10300.0, 4.0], [10400.0, 5.0], [10600.0, 4.0], [10700.0, 1.0], [10500.0, 1.0], [10900.0, 5.0], [11000.0, 9.0], [11100.0, 4.0], [11200.0, 2.0], [10800.0, 2.0], [11700.0, 1.0], [11300.0, 7.0], [11500.0, 5.0], [11600.0, 2.0], [11800.0, 2.0], [12200.0, 1.0], [12000.0, 1.0], [12100.0, 1.0], [11900.0, 3.0], [12500.0, 5.0], [12300.0, 2.0], [12600.0, 4.0], [12700.0, 3.0], [12400.0, 1.0], [13300.0, 3.0], [12900.0, 4.0], [13000.0, 2.0], [13200.0, 5.0], [13100.0, 2.0], [12800.0, 2.0], [13600.0, 5.0], [13700.0, 3.0], [13800.0, 6.0], [13500.0, 4.0], [13400.0, 6.0], [14200.0, 3.0], [14100.0, 2.0], [13900.0, 2.0], [14300.0, 2.0], [14000.0, 2.0], [14800.0, 2.0], [14500.0, 1.0], [14700.0, 3.0], [14400.0, 1.0], [15000.0, 5.0], [15100.0, 9.0], [15300.0, 2.0], [15200.0, 4.0], [14900.0, 3.0], [15500.0, 4.0], [15700.0, 7.0], [15800.0, 7.0], [15600.0, 6.0], [15400.0, 3.0], [16000.0, 4.0], [16300.0, 5.0], [16200.0, 8.0], [15900.0, 5.0], [16100.0, 3.0], [17200.0, 7.0], [16400.0, 7.0], [16500.0, 4.0], [16600.0, 6.0], [16700.0, 6.0], [16800.0, 6.0], [17100.0, 4.0], [17400.0, 8.0], [17300.0, 7.0], [17000.0, 1.0], [16900.0, 1.0], [17500.0, 16.0], [17600.0, 8.0], [17700.0, 10.0], [18100.0, 2.0], [18000.0, 2.0], [17800.0, 5.0], [18400.0, 1.0], [17900.0, 1.0], [18200.0, 1.0], [18600.0, 1.0], [19400.0, 1.0], [19200.0, 1.0], [20400.0, 1.0], [19900.0, 1.0], [19800.0, 1.0], [20000.0, 2.0], [19600.0, 2.0], [21200.0, 1.0], [20500.0, 1.0], [22100.0, 1.0], [22200.0, 1.0], [22000.0, 1.0], [21900.0, 1.0], [22700.0, 1.0], [23500.0, 1.0], [23100.0, 1.0], [22600.0, 1.0], [25500.0, 1.0]], "isOverall": false, "label": "Store Detail", "isController": false}, {"data": [[0.0, 194.0], [300.0, 41.0], [600.0, 1.0], [100.0, 188.0], [200.0, 60.0], [400.0, 12.0], [900.0, 1.0], [1000.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "Queue Tickets", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 26200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 32.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 970.0, "series": [{"data": [[0.0, 498.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 32.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 970.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 219.40691192865114, "minX": 1.66666926E12, "maxY": 367.07960199004975, "series": [{"data": [[1.66666926E12, 367.07960199004975], [1.66666932E12, 219.40691192865114]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66666932E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 34.0, "minX": 1.0, "maxY": 24801.0, "series": [{"data": [[58.0, 460.5], [60.0, 621.0], [68.0, 1150.0], [69.0, 1087.0], [71.0, 1081.0], [72.0, 880.75], [73.0, 1229.0], [75.0, 1064.0], [76.0, 981.0], [84.0, 1358.0], [85.0, 1091.0], [92.0, 1277.0], [94.0, 1285.0], [95.0, 1364.0], [97.0, 1688.0], [107.0, 1682.0], [108.0, 1685.5], [111.0, 1581.0], [114.0, 2235.0], [118.0, 2283.0], [120.0, 1594.0], [121.0, 1726.0], [126.0, 1611.0], [129.0, 1828.0], [131.0, 1733.0], [132.0, 2190.5], [134.0, 2541.0], [139.0, 1805.0], [140.0, 2535.0], [144.0, 2685.0], [146.0, 2098.0], [147.0, 2808.0], [149.0, 2818.0], [150.0, 2007.0], [152.0, 2649.0], [155.0, 2158.0], [156.0, 2465.0], [158.0, 3067.0], [161.0, 2215.0], [163.0, 7604.5], [164.0, 2186.0], [166.0, 2200.0], [172.0, 2402.0], [189.0, 3809.0], [193.0, 2748.0], [195.0, 2765.0], [196.0, 820.0], [198.0, 1881.5], [201.0, 2973.0], [209.0, 3021.5], [210.0, 3009.5], [213.0, 3052.0], [215.0, 3137.0], [220.0, 24801.0], [218.0, 23111.0], [231.0, 2133.0], [232.0, 654.0], [236.0, 723.0], [246.0, 3758.0], [248.0, 3692.0], [250.0, 3651.0], [254.0, 13249.0], [255.0, 3792.0], [259.0, 4003.0], [261.0, 1185.0], [265.0, 4117.0], [275.0, 1440.0], [276.0, 4192.0], [280.0, 4195.0], [287.0, 4381.0], [292.0, 4530.0], [293.0, 4461.0], [294.0, 4411.5], [298.0, 1837.0], [300.0, 4540.0], [303.0, 22632.0], [313.0, 4811.0], [315.0, 4934.0], [318.0, 4877.0], [309.0, 22655.0], [322.0, 4909.0], [323.0, 4906.0], [324.0, 4947.0], [325.0, 13673.5], [328.0, 2290.0], [332.0, 4935.0], [334.0, 15172.5], [341.0, 5257.0], [342.0, 5223.0], [346.0, 5375.5], [350.0, 13203.0], [349.0, 19380.6], [348.0, 20986.666666666668], [340.0, 22267.0], [364.0, 16271.333333333334], [354.0, 16017.625], [355.0, 11644.5], [357.0, 5515.0], [356.0, 18843.0], [359.0, 17509.285714285714], [353.0, 19325.666666666668], [352.0, 18577.0], [358.0, 17711.0], [360.0, 2726.0], [361.0, 16740.846153846152], [366.0, 5637.0], [367.0, 16560.5], [365.0, 16770.0], [382.0, 14733.333333333334], [371.0, 12780.333333333334], [375.0, 14166.625], [370.0, 16432.14285714286], [383.0, 10223.25], [380.0, 15142.0], [378.0, 15352.5], [377.0, 15541.666666666666], [376.0, 15806.833333333334], [372.0, 16375.333333333332], [397.0, 6128.0], [384.0, 3242.0], [389.0, 6075.0], [392.0, 9865.0], [395.0, 12924.1], [398.0, 13186.0], [396.0, 13322.0], [386.0, 14122.0], [385.0, 14236.000000000002], [393.0, 14312.5], [388.0, 16889.0], [414.0, 3526.5], [415.0, 11451.0], [413.0, 11506.0], [412.0, 11528.0], [411.0, 10877.25], [410.0, 10711.25], [409.0, 11670.7], [408.0, 12171.0], [407.0, 12747.0], [403.0, 9879.0], [402.0, 12944.5], [401.0, 12397.5], [406.0, 11940.75], [430.0, 10316.571428571428], [419.0, 10571.639999999998], [418.0, 11767.2], [417.0, 11251.0], [420.0, 7883.666666666667], [422.0, 10665.6], [423.0, 10543.599999999999], [431.0, 9269.923076923078], [429.0, 9938.5], [427.0, 10746.5], [426.0, 10700.6], [425.0, 13125.0], [424.0, 11047.0], [447.0, 8581.42105263158], [437.0, 6856.0], [445.0, 8157.166666666666], [446.0, 8618.1], [444.0, 8866.0], [435.0, 10142.25], [433.0, 9665.0], [439.0, 10112.666666666666], [443.0, 8993.0], [442.0, 9200.333333333334], [441.0, 8138.0], [440.0, 9936.57142857143], [451.0, 7892.5], [450.0, 7088.0], [456.0, 7939.75], [457.0, 6798.333333333333], [459.0, 7555.75], [462.0, 7514.0], [460.0, 7620.0], [458.0, 7722.0], [455.0, 8237.0], [454.0, 8200.0], [453.0, 8437.0], [452.0, 10455.0]], "isOverall": false, "label": "Store List", "isController": false}, {"data": [[356.8460000000003, 10281.144000000004]], "isOverall": false, "label": "Store List-Aggregated", "isController": false}, {"data": [[12.0, 4627.666666666667], [13.0, 5241.0], [15.0, 8064.5], [16.0, 7711.0], [17.0, 6968.0], [18.0, 7848.5], [23.0, 10783.5], [27.0, 7720.0], [33.0, 8700.0], [32.0, 8008.0], [34.0, 8719.5], [37.0, 8441.0], [38.0, 8437.0], [43.0, 9169.0], [42.0, 8646.5], [45.0, 8959.0], [44.0, 9101.5], [47.0, 16617.0], [46.0, 19600.0], [49.0, 9067.0], [50.0, 9134.0], [52.0, 9358.0], [54.0, 20028.0], [57.0, 13031.666666666666], [61.0, 9688.0], [60.0, 9654.0], [62.0, 19907.0], [66.0, 10409.0], [65.0, 9688.0], [71.0, 9833.25], [68.0, 10210.0], [73.0, 11621.625], [72.0, 9932.0], [80.0, 10642.0], [87.0, 10875.0], [89.0, 10862.0], [95.0, 11079.25], [93.0, 11088.5], [98.0, 11007.5], [101.0, 11238.0], [107.0, 11956.0], [106.0, 11815.0], [105.0, 11038.0], [111.0, 16262.0], [115.0, 12324.6], [119.0, 11601.0], [118.0, 11383.0], [123.0, 12301.0], [125.0, 12248.0], [124.0, 12114.666666666666], [135.0, 12992.0], [131.0, 12620.0], [128.0, 12680.0], [142.0, 18422.0], [139.0, 13402.5], [138.0, 13199.0], [137.0, 14032.9], [136.0, 12498.0], [149.0, 13451.666666666666], [147.0, 13616.0], [146.0, 14305.5], [157.0, 13760.5], [156.0, 13496.0], [155.0, 13577.0], [153.0, 13550.0], [166.0, 8292.0], [165.0, 13810.0], [164.0, 13714.0], [163.0, 14096.75], [161.0, 13668.0], [160.0, 13735.0], [170.0, 8283.5], [172.0, 2287.0], [175.0, 23103.0], [174.0, 16936.333333333332], [173.0, 13912.0], [183.0, 17933.0], [181.0, 14924.333333333334], [179.0, 14693.666666666666], [178.0, 15092.0], [176.0, 14297.0], [188.0, 2619.0], [191.0, 2688.0], [190.0, 15114.333333333334], [187.0, 15331.0], [185.0, 15167.0], [184.0, 15230.5], [199.0, 15156.5], [194.0, 5904.0], [192.0, 15477.0], [205.0, 2768.0], [206.0, 12616.25], [201.0, 12839.75], [200.0, 15413.5], [215.0, 15985.25], [214.0, 9976.5], [212.0, 15697.0], [210.0, 15773.0], [209.0, 15575.0], [221.0, 11490.0], [223.0, 3163.0], [222.0, 15735.5], [219.0, 15700.5], [218.0, 15925.0], [216.0, 15727.0], [228.0, 3375.5], [231.0, 1902.5], [229.0, 5524.0], [226.0, 15793.666666666666], [225.0, 5160.0], [224.0, 5139.0], [236.0, 3538.0], [239.0, 16249.666666666666], [235.0, 10637.5], [234.0, 16468.0], [233.0, 10847.5], [232.0, 15835.5], [246.0, 3758.0], [242.0, 16315.42857142857], [253.0, 15970.0], [251.0, 5261.0], [264.0, 12637.4], [269.0, 16702.0], [267.0, 16472.0], [266.0, 16841.0], [265.0, 16580.333333333332], [263.0, 16464.0], [260.0, 16181.444444444445], [286.0, 16820.5], [285.0, 4152.0], [287.0, 17592.333333333332], [282.0, 16782.5], [281.0, 16739.333333333332], [276.0, 16618.0], [275.0, 16922.0], [274.0, 16805.5], [273.0, 16480.0], [296.0, 4395.0], [303.0, 14340.0], [301.0, 17362.8], [298.0, 17345.666666666668], [294.0, 17331.0], [292.0, 17028.0], [289.0, 17352.0], [288.0, 6896.0], [306.0, 4566.0], [319.0, 17477.0], [318.0, 19938.0], [317.0, 17561.0], [315.0, 17637.5], [312.0, 17472.333333333332], [305.0, 17203.5], [320.0, 4924.0], [334.0, 4944.0], [333.0, 17718.333333333332], [329.0, 16272.333333333334], [327.0, 17551.0], [324.0, 17646.0], [323.0, 17538.333333333336], [322.0, 13217.0], [349.0, 18103.0], [336.0, 13387.333333333334], [350.0, 18041.0], [348.0, 15591.0], [337.0, 17545.333333333332], [346.0, 17794.0], [345.0, 17640.0], [344.0, 17894.0], [343.0, 17838.5], [342.0, 17890.5], [340.0, 17700.0], [353.0, 11746.5], [354.0, 11547.5], [359.0, 14403.333333333334], [352.0, 9719.5], [360.0, 5484.0], [366.0, 13061.5], [364.0, 14351.666666666666], [361.0, 13398.0], [358.0, 17533.0], [356.0, 17591.0], [381.0, 14756.0], [383.0, 9332.0], [371.0, 10809.0], [377.0, 10520.0], [382.0, 14563.0], [380.0, 15104.5], [378.0, 15149.0], [376.0, 15582.0], [375.0, 14702.0], [370.0, 14077.333333333334], [368.0, 16403.0], [372.0, 9568.0], [398.0, 11294.5], [387.0, 5921.0], [394.0, 5910.0], [396.0, 13021.0], [395.0, 11094.0], [393.0, 8899.0], [392.0, 13638.0], [391.0, 13645.0], [386.0, 13804.0], [385.0, 11785.5], [388.0, 11402.5], [413.0, 11259.0], [410.0, 10562.0], [412.0, 11388.0], [402.0, 12915.0], [401.0, 10722.333333333334], [411.0, 11555.0], [409.0, 12216.0], [408.0, 12399.0], [407.0, 12590.0], [406.0, 12561.0], [405.0, 12628.0], [404.0, 12686.0], [430.0, 8702.666666666666], [422.0, 10060.666666666666], [431.0, 9569.0], [428.0, 9894.0], [419.0, 10970.0], [418.0, 11027.0], [417.0, 9642.0], [416.0, 11182.0], [427.0, 9847.0], [426.0, 10155.5], [425.0, 10069.0], [424.0, 10200.0], [423.0, 10394.0], [445.0, 8676.0], [447.0, 8496.0], [437.0, 6759.5], [443.0, 8209.666666666666], [446.0, 8548.0], [444.0, 8801.0], [435.0, 9395.0], [434.0, 8560.0], [442.0, 8923.0], [440.0, 11812.0], [439.0, 9047.0], [460.0, 7507.0], [457.0, 7683.666666666667], [462.0, 7282.0], [461.0, 7397.0], [458.0, 7868.0], [455.0, 8083.5], [449.0, 8473.0], [454.0, 8275.0], [453.0, 8422.5], [452.0, 8541.0]], "isOverall": false, "label": "Store Detail", "isController": false}, {"data": [[241.9639999999998, 12639.948000000002]], "isOverall": false, "label": "Store Detail-Aggregated", "isController": false}, {"data": [[2.0, 142.0], [4.0, 234.5], [5.0, 156.0], [6.0, 147.0], [7.0, 323.0], [8.0, 388.0], [9.0, 168.0], [10.0, 419.0], [11.0, 140.0], [12.0, 373.0], [13.0, 248.0], [14.0, 194.0], [15.0, 210.0], [16.0, 153.0], [17.0, 100.0], [18.0, 69.0], [19.0, 82.0], [20.0, 234.0], [21.0, 112.0], [22.0, 115.0], [23.0, 78.0], [24.0, 397.0], [25.0, 179.0], [26.0, 74.0], [27.0, 184.0], [28.0, 113.0], [29.0, 374.0], [31.0, 109.5], [33.0, 342.0], [32.0, 369.0], [35.0, 103.0], [34.0, 254.0], [37.0, 53.0], [36.0, 87.0], [39.0, 98.0], [38.0, 155.0], [41.0, 99.0], [43.0, 100.0], [42.0, 67.0], [45.0, 55.0], [44.0, 170.0], [47.0, 174.0], [46.0, 94.0], [49.0, 104.0], [48.0, 71.0], [51.0, 131.0], [50.0, 83.0], [53.0, 149.0], [52.0, 236.0], [55.0, 211.0], [54.0, 163.0], [57.0, 163.0], [56.0, 106.0], [58.0, 99.0], [61.0, 119.0], [60.0, 115.0], [63.0, 240.0], [62.0, 139.0], [67.0, 79.0], [66.0, 64.0], [65.0, 65.0], [64.0, 85.0], [71.0, 137.0], [70.0, 175.0], [69.0, 90.0], [68.0, 45.0], [74.0, 72.0], [73.0, 94.0], [72.0, 125.0], [79.0, 102.0], [78.0, 93.0], [77.0, 62.0], [76.0, 73.5], [83.0, 131.0], [82.0, 101.5], [80.0, 34.0], [87.0, 97.66666666666667], [84.0, 121.0], [91.0, 115.0], [89.0, 75.0], [88.0, 48.0], [95.0, 193.75], [93.0, 171.0], [99.0, 99.0], [98.0, 221.0], [97.0, 246.0], [103.0, 278.0], [102.0, 180.0], [101.0, 171.0], [100.0, 123.0], [107.0, 201.0], [106.0, 374.0], [105.0, 163.0], [104.0, 108.0], [111.0, 410.0], [110.0, 141.0], [109.0, 114.0], [108.0, 115.0], [115.0, 191.0], [114.0, 186.0], [113.0, 324.5], [119.0, 64.0], [118.0, 373.0], [117.0, 393.0], [116.0, 597.0], [123.0, 96.0], [122.0, 88.0], [121.0, 72.0], [120.0, 70.0], [127.0, 339.0], [126.0, 157.0], [125.0, 87.0], [124.0, 91.0], [135.0, 104.0], [133.0, 135.0], [132.0, 158.0], [131.0, 84.0], [130.0, 102.0], [129.0, 205.0], [128.0, 244.0], [143.0, 99.0], [142.0, 79.0], [141.0, 99.0], [140.0, 86.0], [139.0, 85.0], [138.0, 118.0], [137.0, 56.0], [136.0, 138.0], [150.0, 106.0], [149.0, 198.0], [148.0, 60.0], [147.0, 112.0], [146.0, 124.0], [145.0, 60.0], [144.0, 82.0], [159.0, 149.0], [157.0, 107.0], [156.0, 169.0], [155.0, 114.0], [154.0, 42.0], [153.0, 37.0], [152.0, 164.5], [167.0, 99.0], [166.0, 316.0], [165.0, 121.0], [164.0, 188.0], [163.0, 56.0], [162.0, 55.0], [161.0, 85.0], [160.0, 94.0], [175.0, 105.0], [174.0, 72.0], [173.0, 168.0], [172.0, 195.0], [171.0, 210.0], [170.0, 260.0], [169.0, 373.0], [168.0, 139.0], [183.0, 81.0], [182.0, 107.0], [181.0, 98.0], [180.0, 97.0], [179.0, 72.0], [178.0, 78.0], [177.0, 143.0], [176.0, 101.0], [191.0, 54.0], [190.0, 228.0], [189.0, 256.0], [188.0, 52.0], [187.0, 57.0], [186.0, 52.0], [185.0, 90.0], [184.0, 75.0], [193.0, 96.0], [195.0, 154.5], [199.0, 159.0], [198.0, 133.0], [197.0, 84.0], [196.0, 82.0], [194.0, 276.5], [192.0, 217.0], [207.0, 84.0], [206.0, 124.0], [205.0, 104.5], [203.0, 68.5], [201.0, 118.0], [200.0, 85.0], [210.0, 118.66666666666667], [215.0, 291.0], [214.0, 298.0], [213.0, 90.0], [212.0, 165.0], [209.0, 112.0], [208.0, 121.0], [223.0, 82.0], [222.0, 77.0], [221.0, 135.0], [220.0, 160.0], [219.0, 135.0], [218.0, 394.0], [217.0, 312.0], [216.0, 372.0], [224.0, 63.5], [226.0, 78.5], [231.0, 78.66666666666667], [230.0, 99.0], [229.0, 85.5], [227.0, 52.0], [225.0, 177.0], [233.0, 69.5], [234.0, 107.5], [239.0, 104.0], [238.0, 288.0], [236.0, 304.0], [235.0, 170.0], [232.0, 72.0], [240.0, 60.5], [247.0, 186.0], [246.0, 300.0], [245.0, 81.5], [243.0, 319.0], [242.0, 116.0], [255.0, 334.0], [254.0, 419.0], [253.0, 384.0], [252.0, 215.0], [251.0, 344.0], [250.0, 456.0], [249.0, 336.0], [248.0, 238.0], [270.0, 161.0], [257.0, 201.5], [256.0, 324.0], [259.0, 214.0], [258.0, 287.0], [263.0, 109.0], [262.0, 102.0], [261.0, 91.0], [260.0, 247.0], [271.0, 75.0], [269.0, 62.0], [268.0, 144.0], [267.0, 77.0], [266.0, 129.0], [265.0, 164.0], [264.0, 120.0], [286.0, 107.0], [272.0, 137.0], [274.0, 184.0], [273.0, 241.0], [276.0, 165.0], [275.0, 157.5], [287.0, 48.0], [285.0, 288.0], [284.0, 553.0], [283.0, 257.0], [282.0, 88.0], [281.0, 158.0], [303.0, 438.0], [296.0, 209.0], [302.0, 389.0], [301.0, 376.0], [300.0, 405.0], [291.0, 308.0], [290.0, 369.0], [289.0, 312.0], [288.0, 241.0], [299.0, 278.0], [298.0, 385.0], [297.0, 231.0], [294.0, 137.0], [293.0, 178.0], [292.0, 430.0], [318.0, 118.0], [305.0, 228.66666666666666], [310.0, 159.5], [309.0, 155.0], [308.0, 216.0], [311.0, 96.0], [319.0, 135.0], [317.0, 269.0], [316.0, 255.0], [307.0, 310.0], [306.0, 85.0], [315.0, 451.0], [314.0, 316.0], [313.0, 322.0], [312.0, 142.0], [334.0, 422.0], [324.0, 90.0], [325.0, 623.0], [335.0, 102.0], [333.0, 150.0], [332.0, 427.0], [331.0, 196.0], [330.0, 185.0], [329.0, 74.5], [327.0, 114.0], [321.0, 134.0], [320.0, 168.0], [323.0, 148.0], [322.0, 236.0], [326.0, 223.0], [350.0, 99.0], [339.0, 142.66666666666666], [338.0, 213.0], [337.0, 185.0], [336.0, 386.0], [343.0, 192.0], [342.0, 239.0], [341.0, 127.0], [340.0, 190.0], [351.0, 142.0], [349.0, 238.0], [348.0, 152.0], [347.0, 178.0], [346.0, 189.0], [345.0, 204.0], [344.0, 280.0], [367.0, 114.0], [358.0, 90.5], [357.0, 61.0], [356.0, 123.0], [359.0, 79.0], [353.0, 108.0], [352.0, 139.0], [355.0, 45.0], [354.0, 40.0], [360.0, 117.5], [364.0, 96.0], [366.0, 59.0], [365.0, 83.0], [363.0, 137.0], [362.0, 131.0], [361.0, 96.0], [382.0, 138.5], [374.0, 66.0], [373.0, 127.0], [372.0, 74.0], [375.0, 88.0], [368.0, 70.0], [371.0, 101.0], [370.0, 136.0], [383.0, 131.0], [381.0, 65.0], [380.0, 90.0], [379.0, 73.0], [378.0, 72.0], [377.0, 141.0], [376.0, 58.0], [399.0, 150.0], [395.0, 115.0], [398.0, 49.0], [397.0, 101.0], [396.0, 42.0], [387.0, 66.0], [386.0, 74.0], [385.0, 72.0], [384.0, 54.0], [394.0, 57.0], [393.0, 161.0], [392.0, 126.0], [391.0, 980.0], [390.0, 45.0], [389.0, 184.0], [388.0, 100.0], [414.0, 451.0], [400.0, 117.0], [401.0, 100.5], [403.0, 61.0], [402.0, 66.0], [407.0, 99.0], [406.0, 57.0], [405.0, 60.0], [404.0, 59.0], [415.0, 44.0], [413.0, 79.0], [412.0, 54.0], [411.0, 56.0], [410.0, 146.0], [409.0, 50.0], [408.0, 49.0], [431.0, 77.0], [423.0, 166.5], [422.0, 150.0], [421.0, 90.0], [420.0, 1050.0], [426.0, 71.0], [430.0, 90.0], [429.0, 116.0], [428.0, 76.0], [419.0, 206.0], [418.0, 58.0], [417.0, 44.0], [416.0, 80.0], [427.0, 47.0], [425.0, 86.0], [424.0, 40.0], [447.0, 48.0], [432.0, 65.0], [433.0, 79.0], [435.0, 83.0], [434.0, 76.0], [439.0, 114.0], [438.0, 198.0], [437.0, 206.5], [444.0, 108.0], [443.0, 93.5], [446.0, 75.0], [445.0, 49.0], [442.0, 79.0], [441.0, 266.0], [440.0, 60.0], [462.0, 70.0], [453.0, 180.0], [452.0, 142.0], [455.0, 56.0], [449.0, 48.0], [448.0, 59.0], [451.0, 195.0], [450.0, 56.0], [454.0, 326.0], [463.0, 305.0], [461.0, 50.0], [460.0, 62.0], [459.0, 87.0], [458.0, 96.0], [457.0, 63.0], [456.0, 125.0], [1.0, 151.0]], "isOverall": false, "label": "Queue Tickets", "isController": false}, {"data": [[237.504, 155.54799999999997]], "isOverall": false, "label": "Queue Tickets-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 463.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4949.183333333333, "minX": 1.66666926E12, "maxY": 150369.76666666666, "series": [{"data": [[1.66666926E12, 150369.76666666666], [1.66666932E12, 61121.11666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66666926E12, 4949.183333333333], [1.66666932E12, 7409.15]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66666932E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 123.42105263157893, "minX": 1.66666926E12, "maxY": 17334.801587301594, "series": [{"data": [[1.66666926E12, 7904.778074866315], [1.66666932E12, 17334.801587301594]], "isOverall": false, "label": "Store List", "isController": false}, {"data": [[1.66666926E12, 8300.74782608696], [1.66666932E12, 13936.072727272729]], "isOverall": false, "label": "Store Detail", "isController": false}, {"data": [[1.66666926E12, 123.42105263157893], [1.66666932E12, 165.03626943005173]], "isOverall": false, "label": "Queue Tickets", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66666932E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 123.14912280701756, "minX": 1.66666926E12, "maxY": 17321.47619047619, "series": [{"data": [[1.66666926E12, 7896.705882352941], [1.66666932E12, 17321.47619047619]], "isOverall": false, "label": "Store List", "isController": false}, {"data": [[1.66666926E12, 8300.460869565219], [1.66666932E12, 13935.937662337656]], "isOverall": false, "label": "Store Detail", "isController": false}, {"data": [[1.66666926E12, 123.14912280701756], [1.66666932E12, 164.87823834196894]], "isOverall": false, "label": "Queue Tickets", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66666932E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66666926E12, "maxY": 71.38235294117642, "series": [{"data": [[1.66666926E12, 71.38235294117642], [1.66666932E12, 24.26190476190476]], "isOverall": false, "label": "Store List", "isController": false}, {"data": [[1.66666926E12, 0.0], [1.66666932E12, 0.0]], "isOverall": false, "label": "Store Detail", "isController": false}, {"data": [[1.66666926E12, 0.0], [1.66666932E12, 0.0]], "isOverall": false, "label": "Queue Tickets", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66666932E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 34.0, "minX": 1.66666926E12, "maxY": 26224.0, "series": [{"data": [[1.66666926E12, 19367.0], [1.66666932E12, 26224.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66666926E12, 12721.6], [1.66666932E12, 17625.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66666926E12, 14063.560000000003], [1.66666932E12, 22945.219999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66666926E12, 13383.199999999999], [1.66666932E12, 18749.399999999994]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66666926E12, 40.0], [1.66666932E12, 34.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66666926E12, 7514.0], [1.66666932E12, 9569.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66666932E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 397.0, "minX": 15.0, "maxY": 17692.0, "series": [{"data": [[33.0, 9569.0], [32.0, 10743.5], [35.0, 13464.0], [36.0, 9976.0], [39.0, 11124.5], [41.0, 8991.0], [44.0, 17692.0], [47.0, 8678.0], [75.0, 8974.0], [72.0, 401.5], [86.0, 5041.5], [93.0, 6896.0], [100.0, 12545.0], [106.0, 437.5], [111.0, 397.0], [15.0, 942.0], [18.0, 1764.0], [20.0, 4172.0], [21.0, 14228.0], [22.0, 12575.5], [25.0, 5331.0], [27.0, 3725.0], [28.0, 6025.5], [29.0, 2200.0], [30.0, 15712.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 111.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 397.0, "minX": 15.0, "maxY": 17692.0, "series": [{"data": [[33.0, 9569.0], [32.0, 10737.0], [35.0, 13462.0], [36.0, 9971.0], [39.0, 11114.5], [41.0, 8988.0], [44.0, 17692.0], [47.0, 8677.0], [75.0, 8974.0], [72.0, 400.5], [86.0, 5041.5], [93.0, 6896.0], [100.0, 12545.0], [106.0, 437.5], [111.0, 397.0], [15.0, 938.0], [18.0, 1751.5], [20.0, 4138.0], [21.0, 14185.5], [22.0, 12575.5], [25.0, 5330.0], [27.0, 3718.0], [28.0, 6018.0], [29.0, 2193.0], [30.0, 15710.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 111.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 8.516666666666667, "minX": 1.66666926E12, "maxY": 16.483333333333334, "series": [{"data": [[1.66666926E12, 16.483333333333334], [1.66666932E12, 8.516666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66666932E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 10.05, "minX": 1.66666926E12, "maxY": 14.95, "series": [{"data": [[1.66666926E12, 10.05], [1.66666932E12, 14.95]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66666932E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.9, "minX": 1.66666926E12, "maxY": 6.433333333333334, "series": [{"data": [[1.66666926E12, 1.9166666666666667], [1.66666932E12, 6.416666666666667]], "isOverall": false, "label": "Store Detail-success", "isController": false}, {"data": [[1.66666926E12, 1.9], [1.66666932E12, 6.433333333333334]], "isOverall": false, "label": "Queue Tickets-success", "isController": false}, {"data": [[1.66666926E12, 6.233333333333333], [1.66666932E12, 2.1]], "isOverall": false, "label": "Store List-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66666932E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 10.05, "minX": 1.66666926E12, "maxY": 14.95, "series": [{"data": [[1.66666926E12, 10.05], [1.66666932E12, 14.95]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66666932E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

